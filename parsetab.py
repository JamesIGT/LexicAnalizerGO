
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startAMPER AND ASIG ASSIGN BOOL_TYPE BREAK CASE COLON COMMA CONTINUE DECREMENT DEFAULT DIVIDE DOT ELSE EQ FALSE FLOAT FLOAT64_TYPE FMT FOR FUNC GE GT IF IMPORT INCREMENT INT_TYPE LBRACE LBRACKET LE LPAREN LT MAKE MAP MINUS MOD NE NEW NOT NUMBER OR PACKAGE PLUS PRINT PRINTF PRINTLN RANGE RBRACE RBRACKET RETURN RPAREN SCANLN SEMICOLON STRING STRING_TYPE STRUCT SWITCH TIMES TRUE TYPE UINT VAR VARIABLEstart : PACKAGE VARIABLE import_stmt programimport_stmt : IMPORT LPAREN STRING RPAREN\n                    | IMPORT STRINGprogram : statement\n               | statement programstatement : declaration\n                 | assignment\n                 | print_stmt\n                 | input_stmt\n                 | continue_stmt\n                 | struct_method\n                 | func_def\n                 | func_no_params\n                 | func_call\n                 | if_stmt\n                 | for_stmt\n                 | struct_def\n                 | switch_stmt\n                 | map_declaration\n                 | map_declaration_values\n                 | array_declaration\n                 | array_literal\n                 | slice_declaration\n                 | make_stmt\n                 | new_stmt\n                 | break_stmt\n                 | increment_stmt\n                 | return_stmtdeclaration : VAR VARIABLE type \n                   | VAR VARIABLE type ASIG expression\n                   | VAR VARIABLE type ASSIGN expressionexpression : NUMBERexpression : FLOATexpression : VARIABLEassignment : VARIABLE ASSIGN expression\n                  | VARIABLE ASIG expressionprint_stmt : FMT DOT PRINTF LPAREN STRING COMMA expression RPAREN\n                  | FMT DOT PRINTLN LPAREN expression RPAREN\n                  | FMT DOT PRINTLN LPAREN STRING COMMA VARIABLE RPARENinput_stmt : FMT DOT SCANLN LPAREN AMPER VARIABLE RPARENfunc_def : func_header func_bodyfunc_header : FUNC VARIABLE LPAREN param_list RPAREN typefunc_body : LBRACE program RBRACEreturn_stmt : RETURN expressionfunc_no_params : FUNC VARIABLE LPAREN RPAREN type LBRACE program RBRACEfunc_no_params : FUNC VARIABLE LPAREN RPAREN LBRACE program RBRACEfunc_call : VARIABLE LPAREN arg_list RPAREN\n                 | VARIABLE LPAREN RPARENparam_list : param\n                  | param COMMA param_listparam : VARIABLE typearg_list : expression\n                | expression COMMA arg_listexpression : term\n                  | expression PLUS term\n                  | expression MINUS term\n                  | expression AND expression\n                  | expression OR expression\n                  | expression EQ expression\n                  | expression NE expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression LE expression\n                  | expression GE expressionterm : factor\n            | term TIMES factor\n            | term DIVIDE factorterm : VARIABLEfactor : NUMBER\n              | FLOAT\n              | STRING\n              | VARIABLE\n              | TRUE\n              | FALSE\n              | LPAREN expression RPAREN\n              | make_expr\n              | struct_instance\n              | func_calltype : INT_TYPE\n            | FLOAT64_TYPE\n            | STRING_TYPE\n            | BOOL_TYPEif_stmt : IF expression block\n               | IF expression block ELSE blockfor_stmt : FOR expression block\n                | FOR assignment SEMICOLON expression SEMICOLON for_update blockcontinue_stmt : CONTINUEfor_update : assignment\n                  | increment_stmtblock : LBRACE program RBRACEstruct_method : FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN param_list RPAREN type LBRACE program RBRACE\n                     | FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN RPAREN type LBRACE program RBRACEstruct_def : TYPE VARIABLE STRUCT LBRACE struct_fields RBRACEstruct_fields : struct_field\n                     | struct_field struct_fieldsstruct_field : VARIABLE type\n                    | typestruct_instance : VARIABLE LBRACE struct_fields_values RBRACEstruct_fields_values : field_value\n                            | field_value COMMA struct_fields_valuesfield_value : VARIABLE COLON expressionswitch_stmt : SWITCH expression LBRACE case_list RBRACE\n                   | SWITCH LBRACE case_list RBRACEcase_list : case_clause\n                 | case_clause case_listcase_clause : CASE expression COLON program\n                   | DEFAULT COLON programmap_declaration : VAR VARIABLE MAP LBRACKET type RBRACKET type\n                       | VARIABLE ASIG MAP LBRACKET type RBRACKET type\n                       | VARIABLE ASIG MAP LBRACKET type RBRACKET type LBRACE  map_params RBRACEmap_params : map_param\n                    | map_param COMMA map_paramsmap_param : STRING COLON factormake_stmt : VARIABLE ASIG MAKE LPAREN MAP LBRACKET type RBRACKET type RPAREN\n                 | VARIABLE ASIG MAKE LPAREN LBRACKET RBRACKET type RPARENmake_expr : MAKE LPAREN MAP LBRACKET type RBRACKET type RPAREN\n                 | MAKE LPAREN LBRACKET RBRACKET type RPARENmap_declaration_values : VARIABLE ASIG MAP LBRACKET type RBRACKET type LBRACE map_kv_pairs RBRACEmap_kv_pairs : map_kv_pair\n                    | map_kv_pair COMMA map_kv_pairsmap_kv_pair : STRING COLON expressionarray_declaration : VAR VARIABLE LBRACKET NUMBER RBRACKET type\n                         | VAR VARIABLE ASSIGN array_literalarray_literal : LBRACKET NUMBER RBRACKET type LBRACE array_values RBRACEarray_values : expression\n                    | expression COMMA array_valuesslice_declaration : VAR VARIABLE LBRACKET RBRACKET type\n                         | VARIABLE ASIG LBRACKET RBRACKET type LBRACE slice_values RBRACEslice_values : expression\n                    | expression COMMA slice_valuesnew_stmt : VARIABLE ASIG NEW LPAREN VARIABLE RPARENbreak_stmt : BREAKincrement_stmt : VARIABLE INCREMENT\n                      | VARIABLE DECREMENT'
    
_lr_action_items = {'PACKAGE':([0,],[2,]),'$end':([1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,49,50,51,56,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,104,121,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,191,192,195,206,207,209,218,226,228,230,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,312,315,],[0,-1,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-133,-134,-5,-41,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,-85,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,-30,-31,-127,-84,-90,-98,-102,-131,-122,-38,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,-92,-91,]),'VARIABLE':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,39,40,42,43,45,46,47,48,49,50,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,79,81,82,88,90,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,122,123,128,131,135,136,137,138,139,140,145,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,178,180,183,191,192,195,199,200,203,205,206,207,208,209,210,213,216,217,218,219,221,223,226,228,229,230,231,234,246,247,252,257,260,261,263,265,266,267,268,270,271,273,274,275,278,290,291,292,295,296,297,309,310,311,312,315,],[3,6,6,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,52,-87,55,61,74,75,61,-132,61,-3,61,61,61,-133,-134,101,-41,6,-32,-33,-34,-54,-65,-71,-73,-74,61,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,147,148,-83,155,155,61,61,61,61,61,61,61,61,6,168,172,172,-85,61,61,61,-2,189,-47,61,61,61,-123,61,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,214,-103,6,-30,-31,-127,232,233,6,148,-84,-90,61,-98,168,245,214,-97,-102,6,61,61,-131,-122,61,-38,259,6,-96,-93,-109,-108,-40,148,-46,-117,-86,-124,61,-128,61,-115,-37,-39,-45,-116,-110,-118,307,-114,6,6,172,61,-92,-91,]),'IMPORT':([3,],[5,]),'VAR':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,45,49,50,56,57,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,104,115,121,131,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,183,191,192,195,203,206,207,209,218,219,226,228,230,234,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,297,309,312,315,],[32,32,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-3,-133,-134,-41,32,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,32,-85,-2,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,32,-30,-31,-127,32,-84,-90,-98,-102,32,-131,-122,-38,32,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,32,32,-92,-91,]),'FMT':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,45,49,50,56,57,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,104,115,121,131,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,183,191,192,195,203,206,207,209,218,219,226,228,230,234,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,297,309,312,315,],[33,33,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-3,-133,-134,-41,33,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,33,-85,-2,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,33,-30,-31,-127,33,-84,-90,-98,-102,33,-131,-122,-38,33,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,33,33,-92,-91,]),'CONTINUE':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,45,49,50,56,57,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,104,115,121,131,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,183,191,192,195,203,206,207,209,218,219,226,228,230,234,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,297,309,312,315,],[34,34,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-3,-133,-134,-41,34,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,34,-85,-2,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,34,-30,-31,-127,34,-84,-90,-98,-102,34,-131,-122,-38,34,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,34,34,-92,-91,]),'FUNC':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,45,49,50,56,57,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,104,115,121,131,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,183,191,192,195,203,206,207,209,218,219,226,228,230,234,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,297,309,312,315,],[35,35,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-3,-133,-134,-41,35,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,35,-85,-2,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,35,-30,-31,-127,35,-84,-90,-98,-102,35,-131,-122,-38,35,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,35,35,-92,-91,]),'IF':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,45,49,50,56,57,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,104,115,121,131,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,183,191,192,195,203,206,207,209,218,219,226,228,230,234,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,297,309,312,315,],[37,37,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-3,-133,-134,-41,37,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,37,-85,-2,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,37,-30,-31,-127,37,-84,-90,-98,-102,37,-131,-122,-38,37,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,37,37,-92,-91,]),'FOR':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,45,49,50,56,57,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,104,115,121,131,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,183,191,192,195,203,206,207,209,218,219,226,228,230,234,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,297,309,312,315,],[38,38,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-3,-133,-134,-41,38,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,38,-85,-2,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,38,-30,-31,-127,38,-84,-90,-98,-102,38,-131,-122,-38,38,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,38,38,-92,-91,]),'TYPE':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,45,49,50,56,57,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,104,115,121,131,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,183,191,192,195,203,206,207,209,218,219,226,228,230,234,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,297,309,312,315,],[39,39,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-3,-133,-134,-41,39,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,39,-85,-2,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,39,-30,-31,-127,39,-84,-90,-98,-102,39,-131,-122,-38,39,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,39,39,-92,-91,]),'SWITCH':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,45,49,50,56,57,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,104,115,121,131,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,183,191,192,195,203,206,207,209,218,219,226,228,230,234,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,297,309,312,315,],[40,40,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-3,-133,-134,-41,40,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,40,-85,-2,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,40,-30,-31,-127,40,-84,-90,-98,-102,40,-131,-122,-38,40,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,40,40,-92,-91,]),'LBRACKET':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,45,47,49,50,52,56,57,59,60,61,62,63,64,65,66,68,69,70,79,81,82,83,88,90,91,92,94,95,96,97,104,115,120,121,131,134,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,175,180,183,187,191,192,195,203,206,207,209,218,219,226,228,230,234,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,297,309,312,315,],[41,41,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-3,84,-133,-134,93,-41,41,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,132,-48,-29,41,141,-79,-80,-81,-82,-83,41,176,-85,-2,188,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,211,-103,41,224,-30,-31,-127,41,-84,-90,-98,-102,41,-131,-122,-38,41,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,41,41,-92,-91,]),'BREAK':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,45,49,50,56,57,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,104,115,121,131,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,183,191,192,195,203,206,207,209,218,219,226,228,230,234,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,297,309,312,315,],[42,42,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-3,-133,-134,-41,42,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,42,-85,-2,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,42,-30,-31,-127,42,-84,-90,-98,-102,42,-131,-122,-38,42,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,42,42,-92,-91,]),'RETURN':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,45,49,50,56,57,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,104,115,121,131,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,183,191,192,195,203,206,207,209,218,219,226,228,230,234,247,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,297,309,312,315,],[43,43,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-3,-133,-134,-41,43,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,43,-85,-2,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,43,-30,-31,-127,43,-84,-90,-98,-102,43,-131,-122,-38,43,-93,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,43,43,-92,-91,]),'LPAREN':([5,6,35,37,38,40,43,46,47,48,55,61,67,71,74,85,86,98,99,100,105,106,107,108,109,110,111,112,113,114,117,118,122,123,128,137,138,139,145,155,172,208,221,223,229,233,268,271,295,307,310,311,],[44,48,54,67,67,67,67,67,67,67,102,48,67,120,48,134,135,144,145,146,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,48,48,67,67,67,67,261,67,67,67,48,67,67,]),'STRING':([5,37,38,40,43,44,46,47,48,67,105,106,107,108,109,110,111,112,113,114,117,118,122,123,128,137,138,139,144,145,208,221,223,229,268,269,271,293,294,295,310,311,],[45,64,64,64,64,80,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,196,198,64,64,64,64,64,285,64,300,302,64,64,64,]),'ASSIGN':([6,52,74,90,94,95,96,97,245,],[46,91,46,139,-79,-80,-81,-82,46,]),'ASIG':([6,74,90,94,95,96,97,245,],[47,123,138,-79,-80,-81,-82,123,]),'INCREMENT':([6,245,],[49,49,]),'DECREMENT':([6,245,],[50,50,]),'RBRACE':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,49,50,51,56,59,60,61,62,63,64,65,66,68,69,70,79,81,82,88,90,94,95,96,97,103,104,121,126,127,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,179,180,181,191,192,195,206,207,209,215,216,217,218,220,226,228,230,235,238,239,246,247,248,249,250,251,252,253,254,257,260,262,263,265,266,267,270,273,274,275,278,280,281,282,283,284,286,290,291,292,296,299,301,303,304,305,306,307,308,312,313,314,315,],[-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-133,-134,-5,-41,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-44,-35,-36,-48,-29,-79,-80,-81,-82,152,-83,-85,180,-104,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,207,209,-99,-66,-72,-67,-75,218,-103,-105,-30,-31,-127,-84,-90,-98,247,-94,-97,-102,-107,-131,-122,-38,263,-101,-100,-96,-93,-95,-106,267,-125,-109,270,-129,-108,-40,278,-46,-117,-86,-124,-128,-115,-37,-39,-45,-126,291,292,-111,-119,-130,-116,-110,-118,-114,-112,-120,-65,-121,-32,-33,-34,312,-92,315,-113,-91,]),'CASE':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,49,50,51,56,59,60,61,62,63,64,65,66,68,69,70,77,79,81,82,88,90,94,95,96,97,104,121,125,127,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,191,192,195,206,207,209,218,220,226,228,230,247,249,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,312,315,],[-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-133,-134,-5,-41,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,128,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,-85,128,128,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,-30,-31,-127,-84,-90,-98,-102,-107,-131,-122,-38,-93,-106,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,-92,-91,]),'DEFAULT':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,42,49,50,51,56,59,60,61,62,63,64,65,66,68,69,70,77,79,81,82,88,90,94,95,96,97,104,121,125,127,136,140,152,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,180,191,192,195,206,207,209,218,220,226,228,230,247,249,252,257,260,263,265,266,267,270,273,274,275,278,290,291,292,296,312,315,],[-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-87,-132,-133,-134,-5,-41,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,129,-44,-35,-36,-48,-29,-79,-80,-81,-82,-83,-85,129,129,-47,-123,-43,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,-103,-30,-31,-127,-84,-90,-98,-102,-107,-131,-122,-38,-93,-106,-109,-108,-40,-46,-117,-86,-124,-128,-115,-37,-39,-45,-116,-110,-118,-114,-92,-91,]),'DOT':([33,],[53,]),'LBRACE':([36,40,49,50,58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,81,82,88,94,95,96,97,124,136,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,184,186,202,209,236,242,243,244,252,265,288,290,298,307,],[57,77,-133,-134,115,-32,-33,116,-54,-65,-71,-73,-74,-76,-77,-78,115,116,125,-35,-36,-48,-79,-80,-81,-82,178,-47,203,115,-55,116,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,116,-67,-75,221,223,234,-98,-42,-88,115,-89,269,-117,297,-116,309,116,]),'NUMBER':([37,38,40,41,43,46,47,48,67,93,105,106,107,108,109,110,111,112,113,114,117,118,122,123,128,137,138,139,145,208,221,223,229,268,271,295,310,311,],[59,59,59,78,59,59,59,59,59,142,156,156,59,59,59,59,59,59,59,59,156,156,59,59,59,59,59,59,59,59,59,59,59,59,59,305,156,59,]),'FLOAT':([37,38,40,43,46,47,48,67,105,106,107,108,109,110,111,112,113,114,117,118,122,123,128,137,138,139,145,208,221,223,229,268,271,295,310,311,],[60,60,60,60,60,60,60,60,157,157,60,60,60,60,60,60,60,60,157,157,60,60,60,60,60,60,60,60,60,60,60,60,60,306,157,60,]),'TRUE':([37,38,40,43,46,47,48,67,105,106,107,108,109,110,111,112,113,114,117,118,122,123,128,137,138,139,145,208,221,223,229,268,271,295,310,311,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'FALSE':([37,38,40,43,46,47,48,67,105,106,107,108,109,110,111,112,113,114,117,118,122,123,128,137,138,139,145,208,221,223,229,268,271,295,310,311,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'MAKE':([37,38,40,43,46,47,48,67,105,106,107,108,109,110,111,112,113,114,117,118,122,123,128,137,138,139,145,208,221,223,229,268,271,295,310,311,],[71,71,71,71,71,85,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'MAP':([47,52,120,134,],[83,92,175,187,]),'NEW':([47,],[86,]),'RPAREN':([48,59,60,61,62,63,64,65,66,68,69,70,80,87,88,89,94,95,96,97,102,119,136,147,150,151,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,189,190,197,198,201,209,232,237,241,256,258,259,261,265,277,279,287,290,],[88,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,131,136,-48,-52,-79,-80,-81,-82,149,174,-47,200,204,-49,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,226,-53,230,-71,-51,-98,260,-50,265,273,274,275,276,-117,289,290,296,-116,]),'INT_TYPE':([52,94,95,96,97,130,132,133,141,143,148,149,178,194,204,211,212,214,216,217,222,224,225,227,246,264,272,276,289,],[94,-79,-80,-81,-82,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-97,94,94,94,94,-96,94,94,94,94,]),'FLOAT64_TYPE':([52,94,95,96,97,130,132,133,141,143,148,149,178,194,204,211,212,214,216,217,222,224,225,227,246,264,272,276,289,],[95,-79,-80,-81,-82,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-97,95,95,95,95,-96,95,95,95,95,]),'STRING_TYPE':([52,94,95,96,97,130,132,133,141,143,148,149,178,194,204,211,212,214,216,217,222,224,225,227,246,264,272,276,289,],[96,-79,-80,-81,-82,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-97,96,96,96,96,-96,96,96,96,96,]),'BOOL_TYPE':([52,94,95,96,97,130,132,133,141,143,148,149,178,194,204,211,212,214,216,217,222,224,225,227,246,264,272,276,289,],[97,-79,-80,-81,-82,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-97,97,97,97,97,-96,97,97,97,97,]),'PRINTF':([53,],[98,]),'PRINTLN':([53,],[99,]),'SCANLN':([53,],[100,]),'PLUS':([58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,79,81,82,88,89,119,136,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,177,182,191,192,197,198,209,238,251,254,258,265,273,290,296,303,304,305,306,307,],[105,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,105,-34,105,105,105,105,-48,105,105,-47,-55,-68,-69,-70,-56,105,105,105,105,105,105,105,105,-66,-72,-67,-75,105,105,105,105,105,-71,-98,105,105,105,105,-117,-117,-116,-116,-65,105,-32,-33,-34,]),'MINUS':([58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,79,81,82,88,89,119,136,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,177,182,191,192,197,198,209,238,251,254,258,265,273,290,296,303,304,305,306,307,],[106,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,106,-34,106,106,106,106,-48,106,106,-47,-55,-68,-69,-70,-56,106,106,106,106,106,106,106,106,-66,-72,-67,-75,106,106,106,106,106,-71,-98,106,106,106,106,-117,-117,-116,-116,-65,106,-32,-33,-34,]),'AND':([58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,79,81,82,88,89,119,136,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,177,182,191,192,197,198,209,238,251,254,258,265,273,290,296,303,304,305,306,307,],[107,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,107,-34,107,107,107,107,-48,107,107,-47,-55,-68,-69,-70,-56,107,107,107,107,107,107,107,107,-66,-72,-67,-75,107,107,107,107,107,-71,-98,107,107,107,107,-117,-117,-116,-116,-65,107,-32,-33,-34,]),'OR':([58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,79,81,82,88,89,119,136,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,177,182,191,192,197,198,209,238,251,254,258,265,273,290,296,303,304,305,306,307,],[108,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,108,-34,108,108,108,108,-48,108,108,-47,-55,-68,-69,-70,-56,108,108,108,108,108,108,108,108,-66,-72,-67,-75,108,108,108,108,108,-71,-98,108,108,108,108,-117,-117,-116,-116,-65,108,-32,-33,-34,]),'EQ':([58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,79,81,82,88,89,119,136,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,177,182,191,192,197,198,209,238,251,254,258,265,273,290,296,303,304,305,306,307,],[109,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,109,-34,109,109,109,109,-48,109,109,-47,-55,-68,-69,-70,-56,109,109,109,109,109,109,109,109,-66,-72,-67,-75,109,109,109,109,109,-71,-98,109,109,109,109,-117,-117,-116,-116,-65,109,-32,-33,-34,]),'NE':([58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,79,81,82,88,89,119,136,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,177,182,191,192,197,198,209,238,251,254,258,265,273,290,296,303,304,305,306,307,],[110,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,110,-34,110,110,110,110,-48,110,110,-47,-55,-68,-69,-70,-56,110,110,110,110,110,110,110,110,-66,-72,-67,-75,110,110,110,110,110,-71,-98,110,110,110,110,-117,-117,-116,-116,-65,110,-32,-33,-34,]),'LT':([58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,79,81,82,88,89,119,136,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,177,182,191,192,197,198,209,238,251,254,258,265,273,290,296,303,304,305,306,307,],[111,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,111,-34,111,111,111,111,-48,111,111,-47,-55,-68,-69,-70,-56,111,111,111,111,111,111,111,111,-66,-72,-67,-75,111,111,111,111,111,-71,-98,111,111,111,111,-117,-117,-116,-116,-65,111,-32,-33,-34,]),'GT':([58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,79,81,82,88,89,119,136,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,177,182,191,192,197,198,209,238,251,254,258,265,273,290,296,303,304,305,306,307,],[112,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,112,-34,112,112,112,112,-48,112,112,-47,-55,-68,-69,-70,-56,112,112,112,112,112,112,112,112,-66,-72,-67,-75,112,112,112,112,112,-71,-98,112,112,112,112,-117,-117,-116,-116,-65,112,-32,-33,-34,]),'LE':([58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,79,81,82,88,89,119,136,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,177,182,191,192,197,198,209,238,251,254,258,265,273,290,296,303,304,305,306,307,],[113,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,113,-34,113,113,113,113,-48,113,113,-47,-55,-68,-69,-70,-56,113,113,113,113,113,113,113,113,-66,-72,-67,-75,113,113,113,113,113,-71,-98,113,113,113,113,-117,-117,-116,-116,-65,113,-32,-33,-34,]),'GE':([58,59,60,61,62,63,64,65,66,68,69,70,72,74,76,79,81,82,88,89,119,136,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,177,182,191,192,197,198,209,238,251,254,258,265,273,290,296,303,304,305,306,307,],[114,-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,114,-34,114,114,114,114,-48,114,114,-47,-55,-68,-69,-70,-56,114,114,114,114,114,114,114,114,-66,-72,-67,-75,114,114,114,114,114,-71,-98,114,114,114,114,-117,-117,-116,-116,-65,114,-32,-33,-34,]),'SEMICOLON':([59,60,61,62,63,64,65,66,68,69,70,73,81,82,88,136,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,177,209,265,290,],[-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,122,-35,-36,-48,-47,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,-66,-72,-67,-75,213,-98,-117,-116,]),'COMMA':([59,60,61,62,63,64,65,66,68,69,70,88,89,94,95,96,97,136,151,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,172,173,174,196,198,201,209,238,251,254,265,283,284,290,303,304,305,306,307,314,],[-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-48,137,-79,-80,-81,-82,-47,205,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,210,-66,-72,-67,-75,229,231,-51,-98,-101,268,271,-117,293,294,-116,-65,-121,-32,-33,-34,-113,]),'COLON':([59,60,61,62,63,64,65,66,68,69,70,88,129,136,154,155,156,157,158,159,160,161,162,163,164,165,166,168,171,172,173,174,182,209,265,285,290,300,302,],[-32,-33,-34,-54,-65,-71,-73,-74,-76,-77,-78,-48,183,-47,-55,-68,-69,-70,-56,-57,-58,-59,-60,-61,-62,-63,-64,208,-66,-72,-67,-75,219,-98,-117,295,-116,310,311,]),'TIMES':([59,60,61,62,63,64,65,66,68,69,70,74,88,136,154,155,156,157,158,171,172,173,174,198,209,265,273,290,296,303,305,306,307,],[-69,-70,-68,117,-65,-71,-73,-74,-76,-77,-78,-68,-48,-47,117,-68,-69,-70,117,-66,-72,-67,-75,-71,-98,-117,-117,-116,-116,-65,-69,-70,-68,]),'DIVIDE':([59,60,61,62,63,64,65,66,68,69,70,74,88,136,154,155,156,157,158,171,172,173,174,198,209,265,273,290,296,303,305,306,307,],[-69,-70,-68,118,-65,-71,-73,-74,-76,-77,-78,-68,-48,-47,118,-68,-69,-70,118,-66,-72,-67,-75,-71,-98,-117,-117,-116,-116,-65,-69,-70,-68,]),'STRUCT':([75,],[124,]),'RBRACKET':([78,84,93,94,95,96,97,142,176,185,188,193,240,255,],[130,133,143,-79,-80,-81,-82,194,212,222,225,227,264,272,]),'ELSE':([104,207,],[153,-90,]),'AMPER':([146,],[199,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'import_stmt':([3,],[4,]),'program':([4,8,57,115,183,203,219,234,297,309,],[7,51,103,167,220,235,249,262,308,313,]),'statement':([4,8,57,115,183,203,219,234,297,309,],[8,8,8,8,8,8,8,8,8,8,]),'declaration':([4,8,57,115,183,203,219,234,297,309,],[9,9,9,9,9,9,9,9,9,9,]),'assignment':([4,8,38,57,115,183,203,213,219,234,297,309,],[10,10,73,10,10,10,10,242,10,10,10,10,]),'print_stmt':([4,8,57,115,183,203,219,234,297,309,],[11,11,11,11,11,11,11,11,11,11,]),'input_stmt':([4,8,57,115,183,203,219,234,297,309,],[12,12,12,12,12,12,12,12,12,12,]),'continue_stmt':([4,8,57,115,183,203,219,234,297,309,],[13,13,13,13,13,13,13,13,13,13,]),'struct_method':([4,8,57,115,183,203,219,234,297,309,],[14,14,14,14,14,14,14,14,14,14,]),'func_def':([4,8,57,115,183,203,219,234,297,309,],[15,15,15,15,15,15,15,15,15,15,]),'func_no_params':([4,8,57,115,183,203,219,234,297,309,],[16,16,16,16,16,16,16,16,16,16,]),'func_call':([4,8,37,38,40,43,46,47,48,57,67,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,128,137,138,139,145,183,203,208,219,221,223,229,234,268,271,295,297,309,310,311,],[17,17,70,70,70,70,70,70,70,17,70,70,70,70,70,70,70,70,70,70,70,17,70,70,70,70,70,70,70,70,70,17,17,70,17,70,70,70,17,70,70,70,17,17,70,70,]),'if_stmt':([4,8,57,115,183,203,219,234,297,309,],[18,18,18,18,18,18,18,18,18,18,]),'for_stmt':([4,8,57,115,183,203,219,234,297,309,],[19,19,19,19,19,19,19,19,19,19,]),'struct_def':([4,8,57,115,183,203,219,234,297,309,],[20,20,20,20,20,20,20,20,20,20,]),'switch_stmt':([4,8,57,115,183,203,219,234,297,309,],[21,21,21,21,21,21,21,21,21,21,]),'map_declaration':([4,8,57,115,183,203,219,234,297,309,],[22,22,22,22,22,22,22,22,22,22,]),'map_declaration_values':([4,8,57,115,183,203,219,234,297,309,],[23,23,23,23,23,23,23,23,23,23,]),'array_declaration':([4,8,57,115,183,203,219,234,297,309,],[24,24,24,24,24,24,24,24,24,24,]),'array_literal':([4,8,57,91,115,183,203,219,234,297,309,],[25,25,25,140,25,25,25,25,25,25,25,]),'slice_declaration':([4,8,57,115,183,203,219,234,297,309,],[26,26,26,26,26,26,26,26,26,26,]),'make_stmt':([4,8,57,115,183,203,219,234,297,309,],[27,27,27,27,27,27,27,27,27,27,]),'new_stmt':([4,8,57,115,183,203,219,234,297,309,],[28,28,28,28,28,28,28,28,28,28,]),'break_stmt':([4,8,57,115,183,203,219,234,297,309,],[29,29,29,29,29,29,29,29,29,29,]),'increment_stmt':([4,8,57,115,183,203,213,219,234,297,309,],[30,30,30,30,30,30,244,30,30,30,30,]),'return_stmt':([4,8,57,115,183,203,219,234,297,309,],[31,31,31,31,31,31,31,31,31,31,]),'func_header':([4,8,57,115,183,203,219,234,297,309,],[36,36,36,36,36,36,36,36,36,36,]),'func_body':([36,],[56,]),'expression':([37,38,40,43,46,47,48,67,107,108,109,110,111,112,113,114,122,123,128,137,138,139,145,208,221,223,229,268,271,295,311,],[58,72,76,79,81,82,89,119,159,160,161,162,163,164,165,166,177,82,182,89,191,192,197,238,251,254,258,251,254,304,304,]),'term':([37,38,40,43,46,47,48,67,105,106,107,108,109,110,111,112,113,114,122,123,128,137,138,139,145,208,221,223,229,268,271,295,311,],[62,62,62,62,62,62,62,62,154,158,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'factor':([37,38,40,43,46,47,48,67,105,106,107,108,109,110,111,112,113,114,117,118,122,123,128,137,138,139,145,208,221,223,229,268,271,295,310,311,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,171,173,63,63,63,63,63,63,63,63,63,63,63,63,63,303,314,63,]),'make_expr':([37,38,40,43,46,47,48,67,105,106,107,108,109,110,111,112,113,114,117,118,122,123,128,137,138,139,145,208,221,223,229,268,271,295,310,311,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'struct_instance':([37,38,40,43,46,47,48,67,105,106,107,108,109,110,111,112,113,114,117,118,122,123,128,137,138,139,145,208,221,223,229,268,271,295,310,311,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'arg_list':([48,137,],[87,190,]),'type':([52,130,132,133,141,143,148,149,178,194,204,211,212,214,216,222,224,225,227,264,272,276,289,],[90,184,185,186,193,195,201,202,217,228,236,240,241,246,217,252,255,256,257,279,287,288,298,]),'block':([58,72,153,243,],[104,121,206,266,]),'case_list':([77,125,127,],[126,179,181,]),'case_clause':([77,125,127,],[127,127,127,]),'param_list':([102,205,261,],[150,237,277,]),'param':([102,205,261,],[151,151,151,]),'struct_fields_values':([116,210,],[169,239,]),'field_value':([116,210,],[170,170,]),'struct_fields':([178,216,],[215,248,]),'struct_field':([178,216,],[216,216,]),'for_update':([213,],[243,]),'array_values':([221,268,],[250,280,]),'slice_values':([223,271,],[253,286,]),'map_params':([269,293,],[281,299,]),'map_kv_pairs':([269,294,],[282,301,]),'map_param':([269,293,],[283,283,]),'map_kv_pair':([269,294,],[284,284,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PACKAGE VARIABLE import_stmt program','start',4,'p_start','parser.py',65),
  ('import_stmt -> IMPORT LPAREN STRING RPAREN','import_stmt',4,'p_import_function','parser.py',71),
  ('import_stmt -> IMPORT STRING','import_stmt',2,'p_import_function','parser.py',72),
  ('program -> statement','program',1,'p_program','parser.py',76),
  ('program -> statement program','program',2,'p_program','parser.py',77),
  ('statement -> declaration','statement',1,'p_statement','parser.py',82),
  ('statement -> assignment','statement',1,'p_statement','parser.py',83),
  ('statement -> print_stmt','statement',1,'p_statement','parser.py',84),
  ('statement -> input_stmt','statement',1,'p_statement','parser.py',85),
  ('statement -> continue_stmt','statement',1,'p_statement','parser.py',86),
  ('statement -> struct_method','statement',1,'p_statement','parser.py',87),
  ('statement -> func_def','statement',1,'p_statement','parser.py',88),
  ('statement -> func_no_params','statement',1,'p_statement','parser.py',89),
  ('statement -> func_call','statement',1,'p_statement','parser.py',90),
  ('statement -> if_stmt','statement',1,'p_statement','parser.py',91),
  ('statement -> for_stmt','statement',1,'p_statement','parser.py',92),
  ('statement -> struct_def','statement',1,'p_statement','parser.py',93),
  ('statement -> switch_stmt','statement',1,'p_statement','parser.py',94),
  ('statement -> map_declaration','statement',1,'p_statement','parser.py',95),
  ('statement -> map_declaration_values','statement',1,'p_statement','parser.py',96),
  ('statement -> array_declaration','statement',1,'p_statement','parser.py',97),
  ('statement -> array_literal','statement',1,'p_statement','parser.py',98),
  ('statement -> slice_declaration','statement',1,'p_statement','parser.py',99),
  ('statement -> make_stmt','statement',1,'p_statement','parser.py',100),
  ('statement -> new_stmt','statement',1,'p_statement','parser.py',101),
  ('statement -> break_stmt','statement',1,'p_statement','parser.py',102),
  ('statement -> increment_stmt','statement',1,'p_statement','parser.py',103),
  ('statement -> return_stmt','statement',1,'p_statement','parser.py',104),
  ('declaration -> VAR VARIABLE type','declaration',3,'p_declaration','parser.py',110),
  ('declaration -> VAR VARIABLE type ASIG expression','declaration',5,'p_declaration','parser.py',111),
  ('declaration -> VAR VARIABLE type ASSIGN expression','declaration',5,'p_declaration','parser.py',112),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',135),
  ('expression -> FLOAT','expression',1,'p_expression_float','parser.py',139),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','parser.py',143),
  ('assignment -> VARIABLE ASSIGN expression','assignment',3,'p_assignment','parser.py',157),
  ('assignment -> VARIABLE ASIG expression','assignment',3,'p_assignment','parser.py',158),
  ('print_stmt -> FMT DOT PRINTF LPAREN STRING COMMA expression RPAREN','print_stmt',8,'p_print_stmt','parser.py',179),
  ('print_stmt -> FMT DOT PRINTLN LPAREN expression RPAREN','print_stmt',6,'p_print_stmt','parser.py',180),
  ('print_stmt -> FMT DOT PRINTLN LPAREN STRING COMMA VARIABLE RPAREN','print_stmt',8,'p_print_stmt','parser.py',181),
  ('input_stmt -> FMT DOT SCANLN LPAREN AMPER VARIABLE RPAREN','input_stmt',7,'p_input_stmt','parser.py',192),
  ('func_def -> func_header func_body','func_def',2,'p_func_def','parser.py',197),
  ('func_header -> FUNC VARIABLE LPAREN param_list RPAREN type','func_header',6,'p_func_header','parser.py',201),
  ('func_body -> LBRACE program RBRACE','func_body',3,'p_func_body','parser.py',211),
  ('return_stmt -> RETURN expression','return_stmt',2,'p_return_stmt','parser.py',217),
  ('func_no_params -> FUNC VARIABLE LPAREN RPAREN type LBRACE program RBRACE','func_no_params',8,'p_func_def_no_params','parser.py',240),
  ('func_no_params -> FUNC VARIABLE LPAREN RPAREN LBRACE program RBRACE','func_no_params',7,'p_func_def_no_params_void','parser.py',246),
  ('func_call -> VARIABLE LPAREN arg_list RPAREN','func_call',4,'p_func_call','parser.py',251),
  ('func_call -> VARIABLE LPAREN RPAREN','func_call',3,'p_func_call','parser.py',252),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',293),
  ('param_list -> param COMMA param_list','param_list',3,'p_param_list','parser.py',294),
  ('param -> VARIABLE type','param',2,'p_param','parser.py',303),
  ('arg_list -> expression','arg_list',1,'p_arg_list','parser.py',317),
  ('arg_list -> expression COMMA arg_list','arg_list',3,'p_arg_list','parser.py',318),
  ('expression -> term','expression',1,'p_expression','parser.py',328),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',329),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',330),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',331),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',332),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser.py',333),
  ('expression -> expression NE expression','expression',3,'p_expression','parser.py',334),
  ('expression -> expression LT expression','expression',3,'p_expression','parser.py',335),
  ('expression -> expression GT expression','expression',3,'p_expression','parser.py',336),
  ('expression -> expression LE expression','expression',3,'p_expression','parser.py',337),
  ('expression -> expression GE expression','expression',3,'p_expression','parser.py',338),
  ('term -> factor','term',1,'p_term','parser.py',368),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',369),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',370),
  ('term -> VARIABLE','term',1,'p_term_variable','parser.py',385),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',396),
  ('factor -> FLOAT','factor',1,'p_factor','parser.py',397),
  ('factor -> STRING','factor',1,'p_factor','parser.py',398),
  ('factor -> VARIABLE','factor',1,'p_factor','parser.py',399),
  ('factor -> TRUE','factor',1,'p_factor','parser.py',400),
  ('factor -> FALSE','factor',1,'p_factor','parser.py',401),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',402),
  ('factor -> make_expr','factor',1,'p_factor','parser.py',403),
  ('factor -> struct_instance','factor',1,'p_factor','parser.py',404),
  ('factor -> func_call','factor',1,'p_factor','parser.py',405),
  ('type -> INT_TYPE','type',1,'p_type','parser.py',429),
  ('type -> FLOAT64_TYPE','type',1,'p_type','parser.py',430),
  ('type -> STRING_TYPE','type',1,'p_type','parser.py',431),
  ('type -> BOOL_TYPE','type',1,'p_type','parser.py',432),
  ('if_stmt -> IF expression block','if_stmt',3,'p_if_stmt','parser.py',437),
  ('if_stmt -> IF expression block ELSE block','if_stmt',5,'p_if_stmt','parser.py',438),
  ('for_stmt -> FOR expression block','for_stmt',3,'p_for_stmt','parser.py',447),
  ('for_stmt -> FOR assignment SEMICOLON expression SEMICOLON for_update block','for_stmt',7,'p_for_stmt','parser.py',448),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','parser.py',454),
  ('for_update -> assignment','for_update',1,'p_for_update','parser.py',460),
  ('for_update -> increment_stmt','for_update',1,'p_for_update','parser.py',461),
  ('block -> LBRACE program RBRACE','block',3,'p_block','parser.py',466),
  ('struct_method -> FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN param_list RPAREN type LBRACE program RBRACE','struct_method',13,'p_struct_method','parser.py',471),
  ('struct_method -> FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN RPAREN type LBRACE program RBRACE','struct_method',12,'p_struct_method','parser.py',472),
  ('struct_def -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE','struct_def',6,'p_struct_def','parser.py',477),
  ('struct_fields -> struct_field','struct_fields',1,'p_struct_fields','parser.py',482),
  ('struct_fields -> struct_field struct_fields','struct_fields',2,'p_struct_fields','parser.py',483),
  ('struct_field -> VARIABLE type','struct_field',2,'p_struct_field','parser.py',488),
  ('struct_field -> type','struct_field',1,'p_struct_field','parser.py',489),
  ('struct_instance -> VARIABLE LBRACE struct_fields_values RBRACE','struct_instance',4,'p_struct_instance','parser.py',494),
  ('struct_fields_values -> field_value','struct_fields_values',1,'p_struct_fields_values','parser.py',498),
  ('struct_fields_values -> field_value COMMA struct_fields_values','struct_fields_values',3,'p_struct_fields_values','parser.py',499),
  ('field_value -> VARIABLE COLON expression','field_value',3,'p_field_value','parser.py',503),
  ('switch_stmt -> SWITCH expression LBRACE case_list RBRACE','switch_stmt',5,'p_switch_stmt','parser.py',507),
  ('switch_stmt -> SWITCH LBRACE case_list RBRACE','switch_stmt',4,'p_switch_stmt','parser.py',508),
  ('case_list -> case_clause','case_list',1,'p_case_list','parser.py',512),
  ('case_list -> case_clause case_list','case_list',2,'p_case_list','parser.py',513),
  ('case_clause -> CASE expression COLON program','case_clause',4,'p_case_clause','parser.py',517),
  ('case_clause -> DEFAULT COLON program','case_clause',3,'p_case_clause','parser.py',518),
  ('map_declaration -> VAR VARIABLE MAP LBRACKET type RBRACKET type','map_declaration',7,'p_map_declaration','parser.py',524),
  ('map_declaration -> VARIABLE ASIG MAP LBRACKET type RBRACKET type','map_declaration',7,'p_map_declaration','parser.py',525),
  ('map_declaration -> VARIABLE ASIG MAP LBRACKET type RBRACKET type LBRACE map_params RBRACE','map_declaration',10,'p_map_declaration','parser.py',526),
  ('map_params -> map_param','map_params',1,'p_map_params','parser.py',530),
  ('map_params -> map_param COMMA map_params','map_params',3,'p_map_params','parser.py',531),
  ('map_param -> STRING COLON factor','map_param',3,'p_map_param','parser.py',535),
  ('make_stmt -> VARIABLE ASIG MAKE LPAREN MAP LBRACKET type RBRACKET type RPAREN','make_stmt',10,'p_make_stmt','parser.py',540),
  ('make_stmt -> VARIABLE ASIG MAKE LPAREN LBRACKET RBRACKET type RPAREN','make_stmt',8,'p_make_stmt','parser.py',541),
  ('make_expr -> MAKE LPAREN MAP LBRACKET type RBRACKET type RPAREN','make_expr',8,'p_make_expr','parser.py',545),
  ('make_expr -> MAKE LPAREN LBRACKET RBRACKET type RPAREN','make_expr',6,'p_make_expr','parser.py',546),
  ('map_declaration_values -> VARIABLE ASIG MAP LBRACKET type RBRACKET type LBRACE map_kv_pairs RBRACE','map_declaration_values',10,'p_map_literal_declaration','parser.py',558),
  ('map_kv_pairs -> map_kv_pair','map_kv_pairs',1,'p_map_kv_pairs','parser.py',562),
  ('map_kv_pairs -> map_kv_pair COMMA map_kv_pairs','map_kv_pairs',3,'p_map_kv_pairs','parser.py',563),
  ('map_kv_pair -> STRING COLON expression','map_kv_pair',3,'p_map_kv_pair','parser.py',567),
  ('array_declaration -> VAR VARIABLE LBRACKET NUMBER RBRACKET type','array_declaration',6,'p_array_declaration','parser.py',572),
  ('array_declaration -> VAR VARIABLE ASSIGN array_literal','array_declaration',4,'p_array_declaration','parser.py',573),
  ('array_literal -> LBRACKET NUMBER RBRACKET type LBRACE array_values RBRACE','array_literal',7,'p_array_literal','parser.py',597),
  ('array_values -> expression','array_values',1,'p_array_values','parser.py',613),
  ('array_values -> expression COMMA array_values','array_values',3,'p_array_values','parser.py',614),
  ('slice_declaration -> VAR VARIABLE LBRACKET RBRACKET type','slice_declaration',5,'p_slice_declaration','parser.py',624),
  ('slice_declaration -> VARIABLE ASIG LBRACKET RBRACKET type LBRACE slice_values RBRACE','slice_declaration',8,'p_slice_declaration','parser.py',625),
  ('slice_values -> expression','slice_values',1,'p_slice_values','parser.py',629),
  ('slice_values -> expression COMMA slice_values','slice_values',3,'p_slice_values','parser.py',630),
  ('new_stmt -> VARIABLE ASIG NEW LPAREN VARIABLE RPAREN','new_stmt',6,'p_new_stmt','parser.py',635),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','parser.py',640),
  ('increment_stmt -> VARIABLE INCREMENT','increment_stmt',2,'p_increment_stmt','parser.py',647),
  ('increment_stmt -> VARIABLE DECREMENT','increment_stmt',2,'p_increment_stmt','parser.py',648),
]
