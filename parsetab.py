
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startAMPER AND ASIG ASSIGN BOOL_TYPE BREAK CASE COLON COMMA CONTINUE DECREMENT DEFAULT DIVIDE DOT ELSE EQ FALSE FLOAT FLOAT64_TYPE FMT FOR FUNC GE GT IF IMPORT INCREMENT INT_TYPE LBRACE LBRACKET LE LPAREN LT MAKE MAP MINUS MOD NE NEW NOT NUMBER OR PACKAGE PLUS PRINT PRINTF PRINTLN RANGE RBRACE RBRACKET RETURN RPAREN SCANLN SEMICOLON STRING STRING_TYPE STRUCT SWITCH TIMES TRUE TYPE UINT VAR VARIABLEstart : PACKAGE VARIABLE import_stmt programimport_stmt : IMPORT LPAREN STRING RPAREN\n                    | IMPORT STRINGprogram : statement\n               | statement programstatement : declaration\n                 | assignment\n                 | print_stmt\n                 | input_stmt\n                 | continue_stmt\n                 | struct_method\n                 | func_def\n                 | func_no_params\n                 | func_with_map\n                 | func_call\n                 | if_stmt\n                 | for_stmt\n                 | struct_def\n                 | switch_stmt\n                 | map_declaration\n                 | map_declaration_values\n                 | array_declaration\n                 | array_literal\n                 | slice_declaration\n                 | make_stmt\n                 | new_stmt\n                 | break_stmt\n                 | increment_stmt\n                 | return_stmtdeclaration : VAR VARIABLE type \n                   | VAR VARIABLE type ASIG expression\n                   | VAR VARIABLE type ASSIGN expressionexpression : NUMBERexpression : FLOATexpression : VARIABLEassignment : VARIABLE ASSIGN expression\n                  | VARIABLE ASIG expressionprint_stmt : FMT DOT PRINTF LPAREN STRING COMMA expression RPAREN\n                  | FMT DOT PRINTLN LPAREN expression RPAREN\n                  | FMT DOT PRINTLN LPAREN STRING COMMA VARIABLE RPARENinput_stmt : FMT DOT SCANLN LPAREN AMPER VARIABLE RPARENfunc_def : func_header func_bodyfunc_header : FUNC VARIABLE LPAREN param_list RPAREN type\n                    | FUNC VARIABLE LPAREN RPAREN typefunc_body : LBRACE program RBRACEreturn_stmt : RETURN expressionfunc_with_map : FUNC VARIABLE LPAREN RPAREN MAP LBRACKET type RBRACKET type  func_body  func_no_params : FUNC VARIABLE LPAREN RPAREN LBRACE program RBRACEfunc_call : VARIABLE LPAREN arg_list RPAREN\n                 | VARIABLE LPAREN RPARENparam_list : param\n                  | param COMMA param_listparam : VARIABLE typearg_list : expression\n                | expression COMMA arg_listexpression : term\n                  | expression PLUS term\n                  | expression MINUS term\n                  | expression AND expression\n                  | expression OR expression\n                  | expression EQ expression\n                  | expression NE expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression LE expression\n                  | expression GE expressionterm : factor\n            | term TIMES factor\n            | term DIVIDE factorterm : VARIABLEfactor : NUMBER\n              | FLOAT\n              | STRING\n              | VARIABLE\n              | TRUE\n              | FALSE\n              | LPAREN expression RPAREN\n              | make_expr\n              | struct_instance\n              | func_calltype : INT_TYPE\n            | FLOAT64_TYPE\n            | STRING_TYPE\n            | BOOL_TYPEif_stmt : IF expression block\n               | IF expression block ELSE blockfor_stmt : FOR expression block\n                | FOR assignment SEMICOLON expression SEMICOLON for_update blockcontinue_stmt : CONTINUEfor_update : assignment\n                  | increment_stmtblock : LBRACE program RBRACEstruct_method : FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN param_list RPAREN type LBRACE program RBRACE\n                     | FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN RPAREN type LBRACE program RBRACEstruct_def : TYPE VARIABLE STRUCT LBRACE struct_fields RBRACEstruct_fields : struct_field\n                     | struct_field struct_fieldsstruct_field : VARIABLE type\n                    | typestruct_instance : VARIABLE LBRACE struct_fields_values RBRACEstruct_fields_values : field_value\n                            | field_value COMMA struct_fields_valuesfield_value : VARIABLE COLON expressionswitch_stmt : SWITCH expression LBRACE case_list RBRACE\n                   | SWITCH LBRACE case_list RBRACEcase_list : case_clause\n                 | case_clause case_listcase_clause : CASE expression COLON program\n                   | DEFAULT COLON programmap_declaration : VAR VARIABLE MAP LBRACKET type RBRACKET type\n                       | VARIABLE ASIG MAP LBRACKET type RBRACKET type\n                       | VARIABLE ASIG MAP LBRACKET type RBRACKET type LBRACE  map_params RBRACEmap_params : map_param\n                    | map_param COMMA map_paramsmap_param : STRING COLON factormake_stmt : VARIABLE ASIG MAKE LPAREN MAP LBRACKET type RBRACKET type RPAREN\n                 | VARIABLE ASIG MAKE LPAREN LBRACKET RBRACKET type RPARENmake_expr : MAKE LPAREN MAP LBRACKET type RBRACKET type RPAREN\n                 | MAKE LPAREN LBRACKET RBRACKET type RPARENmap_declaration_values : VARIABLE ASIG MAP LBRACKET type RBRACKET type LBRACE map_kv_pairs RBRACEmap_kv_pairs : map_kv_pair\n                    | map_kv_pair COMMA map_kv_pairsmap_kv_pair : STRING COLON expressionarray_declaration : VAR VARIABLE LBRACKET NUMBER RBRACKET type\n                         | VAR VARIABLE ASSIGN array_literalarray_literal : LBRACKET NUMBER RBRACKET type LBRACE array_values RBRACEarray_values : expression\n                    | expression COMMA array_valuesslice_declaration : VAR VARIABLE LBRACKET RBRACKET type\n                         | VARIABLE ASIG LBRACKET RBRACKET type LBRACE slice_values RBRACEslice_values : expression\n                    | expression COMMA slice_valuesnew_stmt : VARIABLE ASIG NEW LPAREN VARIABLE RPARENbreak_stmt : BREAKincrement_stmt : VARIABLE INCREMENT\n                      | VARIABLE DECREMENT'
    
_lr_action_items = {'PACKAGE':([0,],[2,]),'$end':([1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,50,51,52,57,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,106,123,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,192,193,196,209,210,212,221,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,302,316,319,],[0,-1,-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-135,-136,-5,-42,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,-87,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,-31,-32,-129,-86,-92,-100,-104,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,-47,-94,-93,]),'VARIABLE':([2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,42,43,44,46,47,48,49,50,51,55,57,58,61,62,63,64,65,66,67,68,69,70,71,72,80,82,83,89,91,95,96,97,98,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,130,132,136,137,138,139,140,141,146,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,180,182,185,192,193,196,200,201,203,207,208,209,210,211,212,213,216,219,220,221,222,225,228,230,231,232,233,250,251,254,259,262,263,264,266,267,269,270,272,273,275,276,277,293,294,295,298,299,300,302,313,314,315,316,319,],[3,6,6,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,53,-89,56,63,76,77,63,-134,63,-3,63,63,63,-135,-136,102,-42,6,-33,-34,-35,-56,-67,-73,-75,-76,63,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,148,149,-85,157,157,63,63,63,63,63,63,63,63,6,170,174,174,-87,63,63,63,-2,190,-49,63,63,63,-125,63,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,217,-105,6,-31,-32,-129,234,235,6,149,63,-86,-92,63,-100,170,249,217,-99,-104,6,63,-133,-124,63,-39,261,-98,-95,-111,-110,-41,149,-48,-126,63,-119,-88,-130,63,-117,-38,-40,-118,-112,-120,311,-116,6,-47,6,174,63,-94,-93,]),'IMPORT':([3,],[5,]),'VAR':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,46,50,51,57,58,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,106,117,123,132,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,185,192,193,196,203,209,210,212,221,222,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,300,302,313,316,319,],[33,33,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-3,-135,-136,-42,33,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,33,-87,-2,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,33,-31,-32,-129,33,-86,-92,-100,-104,33,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,33,-47,33,-94,-93,]),'FMT':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,46,50,51,57,58,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,106,117,123,132,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,185,192,193,196,203,209,210,212,221,222,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,300,302,313,316,319,],[34,34,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-3,-135,-136,-42,34,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,34,-87,-2,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,34,-31,-32,-129,34,-86,-92,-100,-104,34,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,34,-47,34,-94,-93,]),'CONTINUE':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,46,50,51,57,58,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,106,117,123,132,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,185,192,193,196,203,209,210,212,221,222,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,300,302,313,316,319,],[35,35,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-3,-135,-136,-42,35,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,35,-87,-2,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,35,-31,-32,-129,35,-86,-92,-100,-104,35,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,35,-47,35,-94,-93,]),'FUNC':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,46,50,51,57,58,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,106,117,123,132,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,185,192,193,196,203,209,210,212,221,222,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,300,302,313,316,319,],[36,36,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-3,-135,-136,-42,36,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,36,-87,-2,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,36,-31,-32,-129,36,-86,-92,-100,-104,36,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,36,-47,36,-94,-93,]),'IF':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,46,50,51,57,58,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,106,117,123,132,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,185,192,193,196,203,209,210,212,221,222,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,300,302,313,316,319,],[39,39,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-3,-135,-136,-42,39,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,39,-87,-2,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,39,-31,-32,-129,39,-86,-92,-100,-104,39,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,39,-47,39,-94,-93,]),'FOR':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,46,50,51,57,58,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,106,117,123,132,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,185,192,193,196,203,209,210,212,221,222,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,300,302,313,316,319,],[40,40,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-3,-135,-136,-42,40,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,40,-87,-2,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,40,-31,-32,-129,40,-86,-92,-100,-104,40,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,40,-47,40,-94,-93,]),'TYPE':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,46,50,51,57,58,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,106,117,123,132,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,185,192,193,196,203,209,210,212,221,222,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,300,302,313,316,319,],[41,41,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-3,-135,-136,-42,41,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,41,-87,-2,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,41,-31,-32,-129,41,-86,-92,-100,-104,41,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,41,-47,41,-94,-93,]),'SWITCH':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,46,50,51,57,58,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,106,117,123,132,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,185,192,193,196,203,209,210,212,221,222,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,300,302,313,316,319,],[42,42,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-3,-135,-136,-42,42,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,42,-87,-2,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,42,-31,-32,-129,42,-86,-92,-100,-104,42,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,42,-47,42,-94,-93,]),'LBRACKET':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,46,48,50,51,53,57,58,61,62,63,64,65,66,67,68,70,71,72,80,82,83,84,89,91,92,93,95,96,97,98,106,117,122,123,132,135,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,177,182,185,188,192,193,196,203,204,209,210,212,221,222,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,300,302,313,316,319,],[38,38,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-3,85,-135,-136,94,-42,38,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,133,-50,-30,38,142,-81,-82,-83,-84,-85,38,178,-87,-2,189,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,214,-105,38,226,-31,-32,-129,38,237,-86,-92,-100,-104,38,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,38,-47,38,-94,-93,]),'BREAK':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,46,50,51,57,58,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,106,117,123,132,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,185,192,193,196,203,209,210,212,221,222,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,300,302,313,316,319,],[43,43,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-3,-135,-136,-42,43,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,43,-87,-2,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,43,-31,-32,-129,43,-86,-92,-100,-104,43,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,43,-47,43,-94,-93,]),'RETURN':([4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,46,50,51,57,58,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,106,117,123,132,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,185,192,193,196,203,209,210,212,221,222,228,230,232,251,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,300,302,313,316,319,],[44,44,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-3,-135,-136,-42,44,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,44,-87,-2,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,44,-31,-32,-129,44,-86,-92,-100,-104,44,-133,-124,-39,-95,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,44,-47,44,-94,-93,]),'LPAREN':([5,6,36,39,40,42,44,47,48,49,56,63,69,73,76,86,87,99,100,101,107,108,109,110,111,112,113,114,115,116,119,120,124,125,130,138,139,140,146,157,174,208,211,225,231,235,267,273,298,311,314,315,],[45,49,55,69,69,69,69,69,69,69,103,49,69,122,49,135,136,145,146,147,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,49,49,69,69,69,69,263,69,69,69,49,69,69,]),'STRING':([5,39,40,42,44,45,47,48,49,69,107,108,109,110,111,112,113,114,115,116,119,120,124,125,130,138,139,140,145,146,208,211,225,231,267,271,273,296,297,298,314,315,],[46,66,66,66,66,81,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,197,199,66,66,66,66,66,287,66,304,306,66,66,66,]),'ASSIGN':([6,53,76,91,95,96,97,98,249,],[47,92,47,140,-81,-82,-83,-84,47,]),'ASIG':([6,76,91,95,96,97,98,249,],[48,125,139,-81,-82,-83,-84,125,]),'INCREMENT':([6,249,],[50,50,]),'DECREMENT':([6,249,],[51,51,]),'RBRACE':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,50,51,52,57,61,62,63,64,65,66,67,68,70,71,72,80,82,83,89,91,95,96,97,98,104,106,123,128,129,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,181,182,183,192,193,196,209,210,212,218,219,220,221,223,228,230,232,236,240,241,242,243,250,251,252,253,254,255,256,259,262,264,266,269,270,272,275,276,277,281,283,284,285,286,288,293,294,295,299,302,303,305,307,308,309,310,311,312,316,317,318,319,],[-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-135,-136,-5,-42,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-46,-36,-37,-50,-30,-81,-82,-83,-84,153,-85,-87,182,-106,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,210,212,-101,-68,-74,-69,-77,221,-105,-107,-31,-32,-129,-86,-92,-100,251,-96,-99,-104,-109,-133,-124,-39,264,266,-127,-103,-102,-98,-95,-97,-108,-111,272,-131,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-128,294,295,-113,-121,-132,-118,-112,-120,-116,-47,-114,-122,-67,-123,-33,-34,-35,316,-94,319,-115,-93,]),'CASE':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,50,51,52,57,61,62,63,64,65,66,67,68,70,71,72,79,80,82,83,89,91,95,96,97,98,106,123,127,129,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,192,193,196,209,210,212,221,223,228,230,232,251,253,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,302,316,319,],[-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-135,-136,-5,-42,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,130,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,-87,130,130,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,-31,-32,-129,-86,-92,-100,-104,-109,-133,-124,-39,-95,-108,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,-47,-94,-93,]),'DEFAULT':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,43,50,51,52,57,61,62,63,64,65,66,67,68,70,71,72,79,80,82,83,89,91,95,96,97,98,106,123,127,129,137,141,153,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,182,192,193,196,209,210,212,221,223,228,230,232,251,253,254,259,262,264,266,269,270,272,275,276,277,293,294,295,299,302,316,319,],[-4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-89,-134,-135,-136,-5,-42,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,131,-46,-36,-37,-50,-30,-81,-82,-83,-84,-85,-87,131,131,-49,-125,-45,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,-105,-31,-32,-129,-86,-92,-100,-104,-109,-133,-124,-39,-95,-108,-111,-110,-41,-48,-126,-119,-88,-130,-117,-38,-40,-118,-112,-120,-116,-47,-94,-93,]),'DOT':([34,],[54,]),'LBRACE':([37,42,50,51,60,61,62,63,64,65,66,67,68,70,71,72,74,76,78,82,83,89,95,96,97,98,126,137,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,187,205,212,238,246,247,248,254,269,290,292,293,301,311,],[58,79,-135,-136,117,-33,-34,118,-56,-67,-73,-75,-76,-78,-79,-80,117,118,127,-36,-37,-50,-81,-82,-83,-84,180,-49,203,208,117,-57,118,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,118,-69,-77,225,-44,-100,-43,-90,117,-91,271,-119,300,58,-118,313,118,]),'NUMBER':([38,39,40,42,44,47,48,49,69,94,107,108,109,110,111,112,113,114,115,116,119,120,124,125,130,138,139,140,146,208,211,225,231,267,273,298,314,315,],[59,61,61,61,61,61,61,61,61,143,158,158,61,61,61,61,61,61,61,61,158,158,61,61,61,61,61,61,61,61,61,61,61,61,61,309,158,61,]),'FLOAT':([39,40,42,44,47,48,49,69,107,108,109,110,111,112,113,114,115,116,119,120,124,125,130,138,139,140,146,208,211,225,231,267,273,298,314,315,],[62,62,62,62,62,62,62,62,159,159,62,62,62,62,62,62,62,62,159,159,62,62,62,62,62,62,62,62,62,62,62,62,62,310,159,62,]),'TRUE':([39,40,42,44,47,48,49,69,107,108,109,110,111,112,113,114,115,116,119,120,124,125,130,138,139,140,146,208,211,225,231,267,273,298,314,315,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'FALSE':([39,40,42,44,47,48,49,69,107,108,109,110,111,112,113,114,115,116,119,120,124,125,130,138,139,140,146,208,211,225,231,267,273,298,314,315,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'MAKE':([39,40,42,44,47,48,49,69,107,108,109,110,111,112,113,114,115,116,119,120,124,125,130,138,139,140,146,208,211,225,231,267,273,298,314,315,],[73,73,73,73,73,86,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'MAP':([48,53,122,135,150,],[84,93,177,188,204,]),'NEW':([48,],[87,]),'RPAREN':([49,61,62,63,64,65,66,67,68,70,71,72,81,88,89,90,95,96,97,98,103,121,137,148,151,152,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,190,191,198,199,202,212,234,239,245,258,260,261,263,269,279,282,289,293,],[89,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,132,137,-50,-54,-81,-82,-83,-84,150,176,-49,201,206,-51,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,228,-55,232,-73,-53,-100,262,-52,269,275,276,277,278,-119,291,293,299,-118,]),'INT_TYPE':([53,95,96,97,98,105,133,134,142,144,149,150,180,195,206,214,215,217,219,220,224,226,227,229,237,250,268,274,278,280,291,],[95,-81,-82,-83,-84,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-99,95,95,95,95,95,-98,95,95,95,95,95,]),'FLOAT64_TYPE':([53,95,96,97,98,105,133,134,142,144,149,150,180,195,206,214,215,217,219,220,224,226,227,229,237,250,268,274,278,280,291,],[96,-81,-82,-83,-84,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-99,96,96,96,96,96,-98,96,96,96,96,96,]),'STRING_TYPE':([53,95,96,97,98,105,133,134,142,144,149,150,180,195,206,214,215,217,219,220,224,226,227,229,237,250,268,274,278,280,291,],[97,-81,-82,-83,-84,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-99,97,97,97,97,97,-98,97,97,97,97,97,]),'BOOL_TYPE':([53,95,96,97,98,105,133,134,142,144,149,150,180,195,206,214,215,217,219,220,224,226,227,229,237,250,268,274,278,280,291,],[98,-81,-82,-83,-84,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-99,98,98,98,98,98,-98,98,98,98,98,98,]),'PRINTF':([54,],[99,]),'PRINTLN':([54,],[100,]),'SCANLN':([54,],[101,]),'RBRACKET':([59,85,94,95,96,97,98,143,178,186,189,194,244,257,265,],[105,134,144,-81,-82,-83,-84,195,215,224,227,229,268,274,280,]),'PLUS':([60,61,62,63,64,65,66,67,68,70,71,72,74,76,78,80,82,83,89,90,121,137,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,179,184,192,193,198,199,212,241,242,256,260,269,275,293,299,307,308,309,310,311,],[107,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,107,-35,107,107,107,107,-50,107,107,-49,-57,-70,-71,-72,-58,107,107,107,107,107,107,107,107,-68,-74,-69,-77,107,107,107,107,107,-73,-100,107,107,107,107,-119,-119,-118,-118,-67,107,-33,-34,-35,]),'MINUS':([60,61,62,63,64,65,66,67,68,70,71,72,74,76,78,80,82,83,89,90,121,137,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,179,184,192,193,198,199,212,241,242,256,260,269,275,293,299,307,308,309,310,311,],[108,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,108,-35,108,108,108,108,-50,108,108,-49,-57,-70,-71,-72,-58,108,108,108,108,108,108,108,108,-68,-74,-69,-77,108,108,108,108,108,-73,-100,108,108,108,108,-119,-119,-118,-118,-67,108,-33,-34,-35,]),'AND':([60,61,62,63,64,65,66,67,68,70,71,72,74,76,78,80,82,83,89,90,121,137,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,179,184,192,193,198,199,212,241,242,256,260,269,275,293,299,307,308,309,310,311,],[109,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,109,-35,109,109,109,109,-50,109,109,-49,-57,-70,-71,-72,-58,109,109,109,109,109,109,109,109,-68,-74,-69,-77,109,109,109,109,109,-73,-100,109,109,109,109,-119,-119,-118,-118,-67,109,-33,-34,-35,]),'OR':([60,61,62,63,64,65,66,67,68,70,71,72,74,76,78,80,82,83,89,90,121,137,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,179,184,192,193,198,199,212,241,242,256,260,269,275,293,299,307,308,309,310,311,],[110,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,110,-35,110,110,110,110,-50,110,110,-49,-57,-70,-71,-72,-58,110,110,110,110,110,110,110,110,-68,-74,-69,-77,110,110,110,110,110,-73,-100,110,110,110,110,-119,-119,-118,-118,-67,110,-33,-34,-35,]),'EQ':([60,61,62,63,64,65,66,67,68,70,71,72,74,76,78,80,82,83,89,90,121,137,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,179,184,192,193,198,199,212,241,242,256,260,269,275,293,299,307,308,309,310,311,],[111,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,111,-35,111,111,111,111,-50,111,111,-49,-57,-70,-71,-72,-58,111,111,111,111,111,111,111,111,-68,-74,-69,-77,111,111,111,111,111,-73,-100,111,111,111,111,-119,-119,-118,-118,-67,111,-33,-34,-35,]),'NE':([60,61,62,63,64,65,66,67,68,70,71,72,74,76,78,80,82,83,89,90,121,137,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,179,184,192,193,198,199,212,241,242,256,260,269,275,293,299,307,308,309,310,311,],[112,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,112,-35,112,112,112,112,-50,112,112,-49,-57,-70,-71,-72,-58,112,112,112,112,112,112,112,112,-68,-74,-69,-77,112,112,112,112,112,-73,-100,112,112,112,112,-119,-119,-118,-118,-67,112,-33,-34,-35,]),'LT':([60,61,62,63,64,65,66,67,68,70,71,72,74,76,78,80,82,83,89,90,121,137,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,179,184,192,193,198,199,212,241,242,256,260,269,275,293,299,307,308,309,310,311,],[113,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,113,-35,113,113,113,113,-50,113,113,-49,-57,-70,-71,-72,-58,113,113,113,113,113,113,113,113,-68,-74,-69,-77,113,113,113,113,113,-73,-100,113,113,113,113,-119,-119,-118,-118,-67,113,-33,-34,-35,]),'GT':([60,61,62,63,64,65,66,67,68,70,71,72,74,76,78,80,82,83,89,90,121,137,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,179,184,192,193,198,199,212,241,242,256,260,269,275,293,299,307,308,309,310,311,],[114,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,114,-35,114,114,114,114,-50,114,114,-49,-57,-70,-71,-72,-58,114,114,114,114,114,114,114,114,-68,-74,-69,-77,114,114,114,114,114,-73,-100,114,114,114,114,-119,-119,-118,-118,-67,114,-33,-34,-35,]),'LE':([60,61,62,63,64,65,66,67,68,70,71,72,74,76,78,80,82,83,89,90,121,137,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,179,184,192,193,198,199,212,241,242,256,260,269,275,293,299,307,308,309,310,311,],[115,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,115,-35,115,115,115,115,-50,115,115,-49,-57,-70,-71,-72,-58,115,115,115,115,115,115,115,115,-68,-74,-69,-77,115,115,115,115,115,-73,-100,115,115,115,115,-119,-119,-118,-118,-67,115,-33,-34,-35,]),'GE':([60,61,62,63,64,65,66,67,68,70,71,72,74,76,78,80,82,83,89,90,121,137,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,179,184,192,193,198,199,212,241,242,256,260,269,275,293,299,307,308,309,310,311,],[116,-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,116,-35,116,116,116,116,-50,116,116,-49,-57,-70,-71,-72,-58,116,116,116,116,116,116,116,116,-68,-74,-69,-77,116,116,116,116,116,-73,-100,116,116,116,116,-119,-119,-118,-118,-67,116,-33,-34,-35,]),'SEMICOLON':([61,62,63,64,65,66,67,68,70,71,72,75,82,83,89,137,156,157,158,159,160,161,162,163,164,165,166,167,168,173,174,175,176,179,212,269,293,],[-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,124,-36,-37,-50,-49,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-74,-69,-77,216,-100,-119,-118,]),'COMMA':([61,62,63,64,65,66,67,68,70,71,72,89,90,95,96,97,98,137,152,156,157,158,159,160,161,162,163,164,165,166,167,168,172,173,174,175,176,197,199,202,212,241,242,256,269,285,286,293,307,308,309,310,311,318,],[-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-50,138,-81,-82,-83,-84,-49,207,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,213,-68,-74,-69,-77,231,233,-53,-100,267,-103,273,-119,296,297,-118,-67,-123,-33,-34,-35,-115,]),'COLON':([61,62,63,64,65,66,67,68,70,71,72,89,131,137,156,157,158,159,160,161,162,163,164,165,166,167,168,170,173,174,175,176,184,212,269,287,293,304,306,],[-33,-34,-35,-56,-67,-73,-75,-76,-78,-79,-80,-50,185,-49,-57,-70,-71,-72,-58,-59,-60,-61,-62,-63,-64,-65,-66,211,-68,-74,-69,-77,222,-100,-119,298,-118,314,315,]),'TIMES':([61,62,63,64,65,66,67,68,70,71,72,76,89,137,156,157,158,159,160,173,174,175,176,199,212,269,275,293,299,307,309,310,311,],[-71,-72,-70,119,-67,-73,-75,-76,-78,-79,-80,-70,-50,-49,119,-70,-71,-72,119,-68,-74,-69,-77,-73,-100,-119,-119,-118,-118,-67,-71,-72,-70,]),'DIVIDE':([61,62,63,64,65,66,67,68,70,71,72,76,89,137,156,157,158,159,160,173,174,175,176,199,212,269,275,293,299,307,309,310,311,],[-71,-72,-70,120,-67,-73,-75,-76,-78,-79,-80,-70,-50,-49,120,-70,-71,-72,120,-68,-74,-69,-77,-73,-100,-119,-119,-118,-118,-67,-71,-72,-70,]),'STRUCT':([77,],[126,]),'ELSE':([106,210,],[155,-92,]),'AMPER':([147,],[200,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'import_stmt':([3,],[4,]),'program':([4,8,58,117,185,203,222,300,313,],[7,52,104,169,223,236,253,312,317,]),'statement':([4,8,58,117,185,203,222,300,313,],[8,8,8,8,8,8,8,8,8,]),'declaration':([4,8,58,117,185,203,222,300,313,],[9,9,9,9,9,9,9,9,9,]),'assignment':([4,8,40,58,117,185,203,216,222,300,313,],[10,10,75,10,10,10,10,246,10,10,10,]),'print_stmt':([4,8,58,117,185,203,222,300,313,],[11,11,11,11,11,11,11,11,11,]),'input_stmt':([4,8,58,117,185,203,222,300,313,],[12,12,12,12,12,12,12,12,12,]),'continue_stmt':([4,8,58,117,185,203,222,300,313,],[13,13,13,13,13,13,13,13,13,]),'struct_method':([4,8,58,117,185,203,222,300,313,],[14,14,14,14,14,14,14,14,14,]),'func_def':([4,8,58,117,185,203,222,300,313,],[15,15,15,15,15,15,15,15,15,]),'func_no_params':([4,8,58,117,185,203,222,300,313,],[16,16,16,16,16,16,16,16,16,]),'func_with_map':([4,8,58,117,185,203,222,300,313,],[17,17,17,17,17,17,17,17,17,]),'func_call':([4,8,39,40,42,44,47,48,49,58,69,107,108,109,110,111,112,113,114,115,116,117,119,120,124,125,130,138,139,140,146,185,203,208,211,222,225,231,267,273,298,300,313,314,315,],[18,18,72,72,72,72,72,72,72,18,72,72,72,72,72,72,72,72,72,72,72,18,72,72,72,72,72,72,72,72,72,18,18,72,72,18,72,72,72,72,72,18,18,72,72,]),'if_stmt':([4,8,58,117,185,203,222,300,313,],[19,19,19,19,19,19,19,19,19,]),'for_stmt':([4,8,58,117,185,203,222,300,313,],[20,20,20,20,20,20,20,20,20,]),'struct_def':([4,8,58,117,185,203,222,300,313,],[21,21,21,21,21,21,21,21,21,]),'switch_stmt':([4,8,58,117,185,203,222,300,313,],[22,22,22,22,22,22,22,22,22,]),'map_declaration':([4,8,58,117,185,203,222,300,313,],[23,23,23,23,23,23,23,23,23,]),'map_declaration_values':([4,8,58,117,185,203,222,300,313,],[24,24,24,24,24,24,24,24,24,]),'array_declaration':([4,8,58,117,185,203,222,300,313,],[25,25,25,25,25,25,25,25,25,]),'array_literal':([4,8,58,92,117,185,203,222,300,313,],[26,26,26,141,26,26,26,26,26,26,]),'slice_declaration':([4,8,58,117,185,203,222,300,313,],[27,27,27,27,27,27,27,27,27,]),'make_stmt':([4,8,58,117,185,203,222,300,313,],[28,28,28,28,28,28,28,28,28,]),'new_stmt':([4,8,58,117,185,203,222,300,313,],[29,29,29,29,29,29,29,29,29,]),'break_stmt':([4,8,58,117,185,203,222,300,313,],[30,30,30,30,30,30,30,30,30,]),'increment_stmt':([4,8,58,117,185,203,216,222,300,313,],[31,31,31,31,31,31,248,31,31,31,]),'return_stmt':([4,8,58,117,185,203,222,300,313,],[32,32,32,32,32,32,32,32,32,]),'func_header':([4,8,58,117,185,203,222,300,313,],[37,37,37,37,37,37,37,37,37,]),'func_body':([37,292,],[57,302,]),'expression':([39,40,42,44,47,48,49,69,109,110,111,112,113,114,115,116,124,125,130,138,139,140,146,208,211,225,231,267,273,298,315,],[60,74,78,80,82,83,90,121,161,162,163,164,165,166,167,168,179,83,184,90,192,193,198,241,242,256,260,241,256,308,308,]),'term':([39,40,42,44,47,48,49,69,107,108,109,110,111,112,113,114,115,116,124,125,130,138,139,140,146,208,211,225,231,267,273,298,315,],[64,64,64,64,64,64,64,64,156,160,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'factor':([39,40,42,44,47,48,49,69,107,108,109,110,111,112,113,114,115,116,119,120,124,125,130,138,139,140,146,208,211,225,231,267,273,298,314,315,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,173,175,65,65,65,65,65,65,65,65,65,65,65,65,65,307,318,65,]),'make_expr':([39,40,42,44,47,48,49,69,107,108,109,110,111,112,113,114,115,116,119,120,124,125,130,138,139,140,146,208,211,225,231,267,273,298,314,315,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'struct_instance':([39,40,42,44,47,48,49,69,107,108,109,110,111,112,113,114,115,116,119,120,124,125,130,138,139,140,146,208,211,225,231,267,273,298,314,315,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'arg_list':([49,138,],[88,191,]),'type':([53,105,133,134,142,144,149,150,180,195,206,214,215,217,219,224,226,227,229,237,268,274,278,280,291,],[91,154,186,187,194,196,202,205,220,230,238,244,245,250,220,254,257,258,259,265,282,289,290,292,301,]),'block':([60,74,155,247,],[106,123,209,270,]),'case_list':([79,127,129,],[128,181,183,]),'case_clause':([79,127,129,],[129,129,129,]),'param_list':([103,207,263,],[151,239,279,]),'param':([103,207,263,],[152,152,152,]),'struct_fields_values':([118,213,],[171,243,]),'field_value':([118,213,],[172,172,]),'struct_fields':([180,219,],[218,252,]),'struct_field':([180,219,],[219,219,]),'array_values':([208,267,],[240,281,]),'for_update':([216,],[247,]),'slice_values':([225,273,],[255,288,]),'map_params':([271,296,],[283,303,]),'map_kv_pairs':([271,297,],[284,305,]),'map_param':([271,296,],[285,285,]),'map_kv_pair':([271,297,],[286,286,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PACKAGE VARIABLE import_stmt program','start',4,'p_start','parser.py',66),
  ('import_stmt -> IMPORT LPAREN STRING RPAREN','import_stmt',4,'p_import_function','parser.py',72),
  ('import_stmt -> IMPORT STRING','import_stmt',2,'p_import_function','parser.py',73),
  ('program -> statement','program',1,'p_program','parser.py',77),
  ('program -> statement program','program',2,'p_program','parser.py',78),
  ('statement -> declaration','statement',1,'p_statement','parser.py',83),
  ('statement -> assignment','statement',1,'p_statement','parser.py',84),
  ('statement -> print_stmt','statement',1,'p_statement','parser.py',85),
  ('statement -> input_stmt','statement',1,'p_statement','parser.py',86),
  ('statement -> continue_stmt','statement',1,'p_statement','parser.py',87),
  ('statement -> struct_method','statement',1,'p_statement','parser.py',88),
  ('statement -> func_def','statement',1,'p_statement','parser.py',89),
  ('statement -> func_no_params','statement',1,'p_statement','parser.py',90),
  ('statement -> func_with_map','statement',1,'p_statement','parser.py',91),
  ('statement -> func_call','statement',1,'p_statement','parser.py',92),
  ('statement -> if_stmt','statement',1,'p_statement','parser.py',93),
  ('statement -> for_stmt','statement',1,'p_statement','parser.py',94),
  ('statement -> struct_def','statement',1,'p_statement','parser.py',95),
  ('statement -> switch_stmt','statement',1,'p_statement','parser.py',96),
  ('statement -> map_declaration','statement',1,'p_statement','parser.py',97),
  ('statement -> map_declaration_values','statement',1,'p_statement','parser.py',98),
  ('statement -> array_declaration','statement',1,'p_statement','parser.py',99),
  ('statement -> array_literal','statement',1,'p_statement','parser.py',100),
  ('statement -> slice_declaration','statement',1,'p_statement','parser.py',101),
  ('statement -> make_stmt','statement',1,'p_statement','parser.py',102),
  ('statement -> new_stmt','statement',1,'p_statement','parser.py',103),
  ('statement -> break_stmt','statement',1,'p_statement','parser.py',104),
  ('statement -> increment_stmt','statement',1,'p_statement','parser.py',105),
  ('statement -> return_stmt','statement',1,'p_statement','parser.py',106),
  ('declaration -> VAR VARIABLE type','declaration',3,'p_declaration','parser.py',112),
  ('declaration -> VAR VARIABLE type ASIG expression','declaration',5,'p_declaration','parser.py',113),
  ('declaration -> VAR VARIABLE type ASSIGN expression','declaration',5,'p_declaration','parser.py',114),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',137),
  ('expression -> FLOAT','expression',1,'p_expression_float','parser.py',141),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','parser.py',145),
  ('assignment -> VARIABLE ASSIGN expression','assignment',3,'p_assignment','parser.py',159),
  ('assignment -> VARIABLE ASIG expression','assignment',3,'p_assignment','parser.py',160),
  ('print_stmt -> FMT DOT PRINTF LPAREN STRING COMMA expression RPAREN','print_stmt',8,'p_print_stmt','parser.py',181),
  ('print_stmt -> FMT DOT PRINTLN LPAREN expression RPAREN','print_stmt',6,'p_print_stmt','parser.py',182),
  ('print_stmt -> FMT DOT PRINTLN LPAREN STRING COMMA VARIABLE RPAREN','print_stmt',8,'p_print_stmt','parser.py',183),
  ('input_stmt -> FMT DOT SCANLN LPAREN AMPER VARIABLE RPAREN','input_stmt',7,'p_input_stmt','parser.py',194),
  ('func_def -> func_header func_body','func_def',2,'p_func_def','parser.py',199),
  ('func_header -> FUNC VARIABLE LPAREN param_list RPAREN type','func_header',6,'p_func_header','parser.py',205),
  ('func_header -> FUNC VARIABLE LPAREN RPAREN type','func_header',5,'p_func_header','parser.py',206),
  ('func_body -> LBRACE program RBRACE','func_body',3,'p_func_body','parser.py',219),
  ('return_stmt -> RETURN expression','return_stmt',2,'p_return_stmt','parser.py',225),
  ('func_with_map -> FUNC VARIABLE LPAREN RPAREN MAP LBRACKET type RBRACKET type func_body','func_with_map',10,'p_func_def_with_map','parser.py',246),
  ('func_no_params -> FUNC VARIABLE LPAREN RPAREN LBRACE program RBRACE','func_no_params',7,'p_func_def_no_params_void','parser.py',252),
  ('func_call -> VARIABLE LPAREN arg_list RPAREN','func_call',4,'p_func_call','parser.py',261),
  ('func_call -> VARIABLE LPAREN RPAREN','func_call',3,'p_func_call','parser.py',262),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',303),
  ('param_list -> param COMMA param_list','param_list',3,'p_param_list','parser.py',304),
  ('param -> VARIABLE type','param',2,'p_param','parser.py',313),
  ('arg_list -> expression','arg_list',1,'p_arg_list','parser.py',327),
  ('arg_list -> expression COMMA arg_list','arg_list',3,'p_arg_list','parser.py',328),
  ('expression -> term','expression',1,'p_expression','parser.py',338),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',339),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',340),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',341),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',342),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser.py',343),
  ('expression -> expression NE expression','expression',3,'p_expression','parser.py',344),
  ('expression -> expression LT expression','expression',3,'p_expression','parser.py',345),
  ('expression -> expression GT expression','expression',3,'p_expression','parser.py',346),
  ('expression -> expression LE expression','expression',3,'p_expression','parser.py',347),
  ('expression -> expression GE expression','expression',3,'p_expression','parser.py',348),
  ('term -> factor','term',1,'p_term','parser.py',378),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',379),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',380),
  ('term -> VARIABLE','term',1,'p_term_variable','parser.py',395),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',406),
  ('factor -> FLOAT','factor',1,'p_factor','parser.py',407),
  ('factor -> STRING','factor',1,'p_factor','parser.py',408),
  ('factor -> VARIABLE','factor',1,'p_factor','parser.py',409),
  ('factor -> TRUE','factor',1,'p_factor','parser.py',410),
  ('factor -> FALSE','factor',1,'p_factor','parser.py',411),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',412),
  ('factor -> make_expr','factor',1,'p_factor','parser.py',413),
  ('factor -> struct_instance','factor',1,'p_factor','parser.py',414),
  ('factor -> func_call','factor',1,'p_factor','parser.py',415),
  ('type -> INT_TYPE','type',1,'p_type','parser.py',439),
  ('type -> FLOAT64_TYPE','type',1,'p_type','parser.py',440),
  ('type -> STRING_TYPE','type',1,'p_type','parser.py',441),
  ('type -> BOOL_TYPE','type',1,'p_type','parser.py',442),
  ('if_stmt -> IF expression block','if_stmt',3,'p_if_stmt','parser.py',447),
  ('if_stmt -> IF expression block ELSE block','if_stmt',5,'p_if_stmt','parser.py',448),
  ('for_stmt -> FOR expression block','for_stmt',3,'p_for_stmt','parser.py',457),
  ('for_stmt -> FOR assignment SEMICOLON expression SEMICOLON for_update block','for_stmt',7,'p_for_stmt','parser.py',458),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','parser.py',463),
  ('for_update -> assignment','for_update',1,'p_for_update','parser.py',468),
  ('for_update -> increment_stmt','for_update',1,'p_for_update','parser.py',469),
  ('block -> LBRACE program RBRACE','block',3,'p_block','parser.py',474),
  ('struct_method -> FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN param_list RPAREN type LBRACE program RBRACE','struct_method',13,'p_struct_method','parser.py',479),
  ('struct_method -> FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN RPAREN type LBRACE program RBRACE','struct_method',12,'p_struct_method','parser.py',480),
  ('struct_def -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE','struct_def',6,'p_struct_def','parser.py',485),
  ('struct_fields -> struct_field','struct_fields',1,'p_struct_fields','parser.py',490),
  ('struct_fields -> struct_field struct_fields','struct_fields',2,'p_struct_fields','parser.py',491),
  ('struct_field -> VARIABLE type','struct_field',2,'p_struct_field','parser.py',496),
  ('struct_field -> type','struct_field',1,'p_struct_field','parser.py',497),
  ('struct_instance -> VARIABLE LBRACE struct_fields_values RBRACE','struct_instance',4,'p_struct_instance','parser.py',502),
  ('struct_fields_values -> field_value','struct_fields_values',1,'p_struct_fields_values','parser.py',506),
  ('struct_fields_values -> field_value COMMA struct_fields_values','struct_fields_values',3,'p_struct_fields_values','parser.py',507),
  ('field_value -> VARIABLE COLON expression','field_value',3,'p_field_value','parser.py',511),
  ('switch_stmt -> SWITCH expression LBRACE case_list RBRACE','switch_stmt',5,'p_switch_stmt','parser.py',515),
  ('switch_stmt -> SWITCH LBRACE case_list RBRACE','switch_stmt',4,'p_switch_stmt','parser.py',516),
  ('case_list -> case_clause','case_list',1,'p_case_list','parser.py',520),
  ('case_list -> case_clause case_list','case_list',2,'p_case_list','parser.py',521),
  ('case_clause -> CASE expression COLON program','case_clause',4,'p_case_clause','parser.py',525),
  ('case_clause -> DEFAULT COLON program','case_clause',3,'p_case_clause','parser.py',526),
  ('map_declaration -> VAR VARIABLE MAP LBRACKET type RBRACKET type','map_declaration',7,'p_map_declaration','parser.py',532),
  ('map_declaration -> VARIABLE ASIG MAP LBRACKET type RBRACKET type','map_declaration',7,'p_map_declaration','parser.py',533),
  ('map_declaration -> VARIABLE ASIG MAP LBRACKET type RBRACKET type LBRACE map_params RBRACE','map_declaration',10,'p_map_declaration','parser.py',534),
  ('map_params -> map_param','map_params',1,'p_map_params','parser.py',538),
  ('map_params -> map_param COMMA map_params','map_params',3,'p_map_params','parser.py',539),
  ('map_param -> STRING COLON factor','map_param',3,'p_map_param','parser.py',543),
  ('make_stmt -> VARIABLE ASIG MAKE LPAREN MAP LBRACKET type RBRACKET type RPAREN','make_stmt',10,'p_make_stmt','parser.py',548),
  ('make_stmt -> VARIABLE ASIG MAKE LPAREN LBRACKET RBRACKET type RPAREN','make_stmt',8,'p_make_stmt','parser.py',549),
  ('make_expr -> MAKE LPAREN MAP LBRACKET type RBRACKET type RPAREN','make_expr',8,'p_make_expr','parser.py',553),
  ('make_expr -> MAKE LPAREN LBRACKET RBRACKET type RPAREN','make_expr',6,'p_make_expr','parser.py',554),
  ('map_declaration_values -> VARIABLE ASIG MAP LBRACKET type RBRACKET type LBRACE map_kv_pairs RBRACE','map_declaration_values',10,'p_map_literal_declaration','parser.py',566),
  ('map_kv_pairs -> map_kv_pair','map_kv_pairs',1,'p_map_kv_pairs','parser.py',570),
  ('map_kv_pairs -> map_kv_pair COMMA map_kv_pairs','map_kv_pairs',3,'p_map_kv_pairs','parser.py',571),
  ('map_kv_pair -> STRING COLON expression','map_kv_pair',3,'p_map_kv_pair','parser.py',575),
  ('array_declaration -> VAR VARIABLE LBRACKET NUMBER RBRACKET type','array_declaration',6,'p_array_declaration','parser.py',580),
  ('array_declaration -> VAR VARIABLE ASSIGN array_literal','array_declaration',4,'p_array_declaration','parser.py',581),
  ('array_literal -> LBRACKET NUMBER RBRACKET type LBRACE array_values RBRACE','array_literal',7,'p_array_literal','parser.py',605),
  ('array_values -> expression','array_values',1,'p_array_values','parser.py',621),
  ('array_values -> expression COMMA array_values','array_values',3,'p_array_values','parser.py',622),
  ('slice_declaration -> VAR VARIABLE LBRACKET RBRACKET type','slice_declaration',5,'p_slice_declaration','parser.py',632),
  ('slice_declaration -> VARIABLE ASIG LBRACKET RBRACKET type LBRACE slice_values RBRACE','slice_declaration',8,'p_slice_declaration','parser.py',633),
  ('slice_values -> expression','slice_values',1,'p_slice_values','parser.py',637),
  ('slice_values -> expression COMMA slice_values','slice_values',3,'p_slice_values','parser.py',638),
  ('new_stmt -> VARIABLE ASIG NEW LPAREN VARIABLE RPAREN','new_stmt',6,'p_new_stmt','parser.py',643),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','parser.py',648),
  ('increment_stmt -> VARIABLE INCREMENT','increment_stmt',2,'p_increment_stmt','parser.py',654),
  ('increment_stmt -> VARIABLE DECREMENT','increment_stmt',2,'p_increment_stmt','parser.py',655),
]
