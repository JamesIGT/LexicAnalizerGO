
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEMODrightASSIGNAMPER AND APPEND ASSIGN ASSIGN_SHORT BOOL_TYPE BREAK CASE COLON COMMA CONTAINSRUNE CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_ASSIGN DOT ELSE EQ FALSE FLOAT64_TYPE FOR FUNC GE GT IF IMPORT INCREMENT INT_TYPE ISDIGIT ISLETTER LBRACE LBRACKET LE LPAREN LT MAIN MAP MINUS MINUS_ASSIGN MOD NE NUMBER OR PACKAGE PLUS PLUS_ASSIGN PRINTF PRINTLN RANGE RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING STRING_TYPE STRUCT SWITCH TIMES TIMES_ASSIGN TOLOWER TRUE TYPE VAR VARIABLEprogram : PACKAGE MAIN import_section function_list\n               | PACKAGE MAIN import_section empty\n               | PACKAGE VARIABLE import_section function_list\n               | PACKAGE VARIABLE import_section emptyimport_section : IMPORT import_list\n                      | emptyimport_list : STRING\n                   | LPAREN string_list RPARENstring_list : string_list STRING\n                   | STRINGfunction_list : function_list function\n                     | function\n                     | function_list type_declaration\n                     | type_declaration\n                     | emptyfunction : FUNC VARIABLE LPAREN param_list RPAREN return_type blockfunction : FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN param_list RPAREN return_type block\n                | FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN RPAREN return_type block\n                | FUNC LPAREN VARIABLE TIMES VARIABLE RPAREN VARIABLE LPAREN param_list RPAREN return_type block\n                | FUNC LPAREN VARIABLE TIMES VARIABLE RPAREN VARIABLE LPAREN RPAREN return_type blockparam_list : param_list COMMA param\n                  | param\n                  | emptyparam : VARIABLE typereturn_type : type\n                   | LPAREN type_list RPAREN\n                   | emptytype_list : type_list COMMA type\n                 | typetype : STRING_TYPE\n            | INT_TYPE\n            | BOOL_TYPE\n            | FLOAT64_TYPE\n            | VARIABLE\n            | LBRACKET RBRACKET VARIABLEblock : LBRACE statement_list RBRACEstatement_list : statement_list statement\n                      | emptystatement : declaration\n                 | assignment\n                 | short_declaration\n                 | if_statement\n                 | for_loop\n                 | function_call SEMICOLON\n                 | RETURN expression_list\n                 | RETURN expression_list SEMICOLON\n                 | FOR VARIABLE COMMA VARIABLE ASSIGN_SHORT RANGE variable block\n                 | variable INCREMENT\n                 | variable DECREMENT\n                 | SWITCH LBRACE case_list RBRACE\n                 | SWITCH expression LBRACE case_list RBRACE\n                 | type_declarationdeclaration : VAR VARIABLE ASSIGN expression\n                  | VAR VARIABLE ASSIGN expression SEMICOLONassignment : variable ASSIGN expression\n                 | variable ASSIGN expression SEMICOLONassignment : variable PLUS_ASSIGN expression\n                 | variable MINUS_ASSIGN expression\n                 | variable TIMES_ASSIGN expression\n                 | variable DIVIDE_ASSIGN expressionif_statement : IF expression block else_clauseelse_clause : ELSE block\n                   | emptyfor_loop : FOR VARIABLE ASSIGN expression SEMICOLON expression SEMICOLON assignment block\n                | FOR VARIABLE ASSIGN_SHORT expression SEMICOLON expression SEMICOLON increment_statement block\n                | FOR variable_list ASSIGN_SHORT RANGE variable blockincrement_statement : variable INCREMENT\n                          | variable DECREMENTfunction_call : variable LPAREN argument_list RPAREN\n                     | variable LPAREN RPAREN\n                     | APPEND LPAREN argument_list RPAREN\n                     | APPEND LPAREN RPAREN\n                     | variable DOT APPEND LPAREN argument_list RPAREN\n                     | variable DOT APPEND LPAREN RPAREN\n                     | PRINTLN LPAREN argument_list RPAREN\n                     | PRINTLN LPAREN RPAREN\n                     | variable DOT PRINTLN LPAREN argument_list RPAREN\n                     | variable DOT PRINTLN LPAREN RPAREN\n                     | PRINTF LPAREN argument_list RPAREN\n                     | PRINTF LPAREN RPAREN\n                     | variable DOT PRINTF LPAREN argument_list RPAREN\n                     | variable DOT PRINTF LPAREN RPARENargument_list : expression\n                     | argument_list COMMA expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                  | expression LT expression\n                  | expression LE expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression EQ expression\n                  | expression NE expression\n                  | expression AND expression\n                  | expression OR expression\n                  | LPAREN expression RPAREN\n                  | NUMBER\n                  | variable\n                  | function_call\n                  | STRING\n                  | TRUE\n                  | FALSEempty :case_list : case_list case\n                 | casecase : CASE expression COLON statement_list\n            | DEFAULT COLON statement_listvariable : VARIABLE\n                | variable DOT VARIABLE\n                | variable LBRACKET expression RBRACKETshort_declaration : variable_list ASSIGN_SHORT expression_list\n                        | variable_list ASSIGN_SHORT expression_list SEMICOLONvariable_list : variable\n                     | variable COMMA variable_listexpression_list : expression\n                       | expression COMMA expression_listexpression : LBRACKET RBRACKET variable LPAREN expression RPARENexpression : FLOAT64_TYPE LPAREN expression RPAREN\n                  | INT_TYPE LPAREN expression RPAREN\n                  | STRING_TYPE LPAREN expression RPAREN\n                  | BOOL_TYPE LPAREN expression RPAREN\n                  | VARIABLE LPAREN expression RPARENtype_declaration : TYPE VARIABLE STRUCT LBRACE struct_fields RBRACEstruct_fields : struct_fields struct_field\n                    | struct_field\n                    | emptystruct_field : VARIABLE type\n                   | emptyexpression : VARIABLE LBRACE field_list RBRACEfield_list : field_list COMMA field\n                  | field\n                  | emptyfield : VARIABLE COLON expression'
    
_lr_action_items = {'PACKAGE':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'import_section':([3,4,],[5,8,]),'empty':([3,4,5,8,27,38,46,51,70,71,77,79,102,103,146,170,197,246,277,],[6,6,10,19,35,53,58,65,76,35,58,35,58,58,58,231,252,76,76,]),'function_list':([5,8,],[9,18,]),'function':([5,8,9,18,],[11,11,20,20,]),'type_declaration':([5,8,9,18,75,278,292,],[12,12,21,21,94,94,94,]),'import_list':([7,],[15,]),'string_list':([17,],[25,]),'param_list':([27,71,79,],[33,78,104,]),'param':([27,47,71,79,],[34,59,34,34,]),'type':([32,46,50,55,74,77,102,103,146,],[40,57,62,68,80,57,57,57,57,]),'struct_fields':([38,],[51,]),'struct_field':([38,51,],[52,64,]),'return_type':([46,77,102,103,146,],[56,101,144,145,206,]),'type_list':([55,],[67,]),'block':([56,101,139,144,145,206,251,269,294,298,300,],[69,143,197,204,205,256,281,288,297,302,305,]),'statement_list':([70,246,277,],[75,278,292,]),'statement':([75,278,292,],[82,82,82,]),'declaration':([75,278,292,],[83,83,83,]),'assignment':([75,278,292,296,],[84,84,84,300,]),'short_declaration':([75,278,292,],[85,85,85,]),'if_statement':([75,278,292,],[86,86,86,]),'for_loop':([75,278,292,],[87,87,87,]),'function_call':([75,89,93,97,108,126,127,128,129,130,131,133,138,140,141,142,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,166,167,168,169,172,173,192,195,238,239,240,241,257,263,267,268,278,292,],[88,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,88,88,]),'variable':([75,89,90,93,97,108,126,127,128,129,130,131,133,134,138,140,141,142,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,169,172,173,192,195,235,238,239,240,241,257,263,267,268,278,285,292,295,296,],[92,110,122,110,110,110,110,110,110,110,110,110,110,122,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,222,110,110,110,110,110,110,110,110,110,269,110,110,110,110,110,110,110,110,92,294,92,299,301,]),'variable_list':([75,90,134,278,292,],[96,123,189,96,96,]),'expression_list':([89,138,148,],[106,196,207,]),'expression':([89,93,97,108,126,127,128,129,130,131,133,138,140,141,142,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,166,167,168,169,172,173,192,195,238,239,240,241,257,263,267,268,],[107,136,139,162,176,177,178,179,180,183,188,107,183,183,183,107,208,209,210,211,212,213,214,215,216,217,218,219,220,223,224,225,226,227,233,234,245,248,270,183,183,183,282,283,286,287,]),'argument_list':([131,140,141,142,239,240,241,],[181,198,200,202,271,273,275,]),'case_list':([135,194,],[190,247,]),'case':([135,190,194,247,],[191,244,191,244,]),'field_list':([170,],[229,]),'field':([170,265,],[230,284,]),'else_clause':([197,],[250,]),'increment_statement':([295,],[298,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PACKAGE MAIN import_section function_list','program',4,'p_program','parser.py',31),
  ('program -> PACKAGE MAIN import_section empty','program',4,'p_program','parser.py',32),
  ('program -> PACKAGE VARIABLE import_section function_list','program',4,'p_program','parser.py',33),
  ('program -> PACKAGE VARIABLE import_section empty','program',4,'p_program','parser.py',34),
  ('import_section -> IMPORT import_list','import_section',2,'p_import_section','parser.py',39),
  ('import_section -> empty','import_section',1,'p_import_section','parser.py',40),
  ('import_list -> STRING','import_list',1,'p_import_list','parser.py',44),
  ('import_list -> LPAREN string_list RPAREN','import_list',3,'p_import_list','parser.py',45),
  ('string_list -> string_list STRING','string_list',2,'p_string_list','parser.py',49),
  ('string_list -> STRING','string_list',1,'p_string_list','parser.py',50),
  ('function_list -> function_list function','function_list',2,'p_function_list','parser.py',54),
  ('function_list -> function','function_list',1,'p_function_list','parser.py',55),
  ('function_list -> function_list type_declaration','function_list',2,'p_function_list','parser.py',56),
  ('function_list -> type_declaration','function_list',1,'p_function_list','parser.py',57),
  ('function_list -> empty','function_list',1,'p_function_list','parser.py',58),
  ('function -> FUNC VARIABLE LPAREN param_list RPAREN return_type block','function',7,'p_function','parser.py',62),
  ('function -> FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN param_list RPAREN return_type block','function',11,'p_function_with_receiver','parser.py',66),
  ('function -> FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN RPAREN return_type block','function',10,'p_function_with_receiver','parser.py',67),
  ('function -> FUNC LPAREN VARIABLE TIMES VARIABLE RPAREN VARIABLE LPAREN param_list RPAREN return_type block','function',12,'p_function_with_receiver','parser.py',68),
  ('function -> FUNC LPAREN VARIABLE TIMES VARIABLE RPAREN VARIABLE LPAREN RPAREN return_type block','function',11,'p_function_with_receiver','parser.py',69),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','parser.py',75),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',76),
  ('param_list -> empty','param_list',1,'p_param_list','parser.py',77),
  ('param -> VARIABLE type','param',2,'p_param','parser.py',81),
  ('return_type -> type','return_type',1,'p_return_type','parser.py',85),
  ('return_type -> LPAREN type_list RPAREN','return_type',3,'p_return_type','parser.py',86),
  ('return_type -> empty','return_type',1,'p_return_type','parser.py',87),
  ('type_list -> type_list COMMA type','type_list',3,'p_type_list','parser.py',91),
  ('type_list -> type','type_list',1,'p_type_list','parser.py',92),
  ('type -> STRING_TYPE','type',1,'p_type','parser.py',96),
  ('type -> INT_TYPE','type',1,'p_type','parser.py',97),
  ('type -> BOOL_TYPE','type',1,'p_type','parser.py',98),
  ('type -> FLOAT64_TYPE','type',1,'p_type','parser.py',99),
  ('type -> VARIABLE','type',1,'p_type','parser.py',100),
  ('type -> LBRACKET RBRACKET VARIABLE','type',3,'p_type','parser.py',101),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','parser.py',107),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',111),
  ('statement_list -> empty','statement_list',1,'p_statement_list','parser.py',112),
  ('statement -> declaration','statement',1,'p_statement','parser.py',116),
  ('statement -> assignment','statement',1,'p_statement','parser.py',117),
  ('statement -> short_declaration','statement',1,'p_statement','parser.py',118),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',119),
  ('statement -> for_loop','statement',1,'p_statement','parser.py',120),
  ('statement -> function_call SEMICOLON','statement',2,'p_statement','parser.py',121),
  ('statement -> RETURN expression_list','statement',2,'p_statement','parser.py',122),
  ('statement -> RETURN expression_list SEMICOLON','statement',3,'p_statement','parser.py',123),
  ('statement -> FOR VARIABLE COMMA VARIABLE ASSIGN_SHORT RANGE variable block','statement',8,'p_statement','parser.py',124),
  ('statement -> variable INCREMENT','statement',2,'p_statement','parser.py',125),
  ('statement -> variable DECREMENT','statement',2,'p_statement','parser.py',126),
  ('statement -> SWITCH LBRACE case_list RBRACE','statement',4,'p_statement','parser.py',127),
  ('statement -> SWITCH expression LBRACE case_list RBRACE','statement',5,'p_statement','parser.py',128),
  ('statement -> type_declaration','statement',1,'p_statement','parser.py',129),
  ('declaration -> VAR VARIABLE ASSIGN expression','declaration',4,'p_declaration','parser.py',133),
  ('declaration -> VAR VARIABLE ASSIGN expression SEMICOLON','declaration',5,'p_declaration','parser.py',134),
  ('assignment -> variable ASSIGN expression','assignment',3,'p_assignment','parser.py',138),
  ('assignment -> variable ASSIGN expression SEMICOLON','assignment',4,'p_assignment','parser.py',139),
  ('assignment -> variable PLUS_ASSIGN expression','assignment',3,'p_assignment_compound','parser.py',143),
  ('assignment -> variable MINUS_ASSIGN expression','assignment',3,'p_assignment_compound','parser.py',144),
  ('assignment -> variable TIMES_ASSIGN expression','assignment',3,'p_assignment_compound','parser.py',145),
  ('assignment -> variable DIVIDE_ASSIGN expression','assignment',3,'p_assignment_compound','parser.py',146),
  ('if_statement -> IF expression block else_clause','if_statement',4,'p_if_statement','parser.py',150),
  ('else_clause -> ELSE block','else_clause',2,'p_else_clause','parser.py',154),
  ('else_clause -> empty','else_clause',1,'p_else_clause','parser.py',155),
  ('for_loop -> FOR VARIABLE ASSIGN expression SEMICOLON expression SEMICOLON assignment block','for_loop',9,'p_for_loop','parser.py',159),
  ('for_loop -> FOR VARIABLE ASSIGN_SHORT expression SEMICOLON expression SEMICOLON increment_statement block','for_loop',9,'p_for_loop','parser.py',160),
  ('for_loop -> FOR variable_list ASSIGN_SHORT RANGE variable block','for_loop',6,'p_for_loop','parser.py',161),
  ('increment_statement -> variable INCREMENT','increment_statement',2,'p_increment_statement','parser.py',165),
  ('increment_statement -> variable DECREMENT','increment_statement',2,'p_increment_statement','parser.py',166),
  ('function_call -> variable LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',170),
  ('function_call -> variable LPAREN RPAREN','function_call',3,'p_function_call','parser.py',171),
  ('function_call -> APPEND LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',172),
  ('function_call -> APPEND LPAREN RPAREN','function_call',3,'p_function_call','parser.py',173),
  ('function_call -> variable DOT APPEND LPAREN argument_list RPAREN','function_call',6,'p_function_call','parser.py',174),
  ('function_call -> variable DOT APPEND LPAREN RPAREN','function_call',5,'p_function_call','parser.py',175),
  ('function_call -> PRINTLN LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',176),
  ('function_call -> PRINTLN LPAREN RPAREN','function_call',3,'p_function_call','parser.py',177),
  ('function_call -> variable DOT PRINTLN LPAREN argument_list RPAREN','function_call',6,'p_function_call','parser.py',178),
  ('function_call -> variable DOT PRINTLN LPAREN RPAREN','function_call',5,'p_function_call','parser.py',179),
  ('function_call -> PRINTF LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',180),
  ('function_call -> PRINTF LPAREN RPAREN','function_call',3,'p_function_call','parser.py',181),
  ('function_call -> variable DOT PRINTF LPAREN argument_list RPAREN','function_call',6,'p_function_call','parser.py',182),
  ('function_call -> variable DOT PRINTF LPAREN RPAREN','function_call',5,'p_function_call','parser.py',183),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',187),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',188),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',192),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',193),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',194),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',195),
  ('expression -> expression MOD expression','expression',3,'p_expression','parser.py',196),
  ('expression -> expression LT expression','expression',3,'p_expression','parser.py',197),
  ('expression -> expression LE expression','expression',3,'p_expression','parser.py',198),
  ('expression -> expression GT expression','expression',3,'p_expression','parser.py',199),
  ('expression -> expression GE expression','expression',3,'p_expression','parser.py',200),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser.py',201),
  ('expression -> expression NE expression','expression',3,'p_expression','parser.py',202),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',203),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',204),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',205),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',206),
  ('expression -> variable','expression',1,'p_expression','parser.py',207),
  ('expression -> function_call','expression',1,'p_expression','parser.py',208),
  ('expression -> STRING','expression',1,'p_expression','parser.py',209),
  ('expression -> TRUE','expression',1,'p_expression','parser.py',210),
  ('expression -> FALSE','expression',1,'p_expression','parser.py',211),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',215),
  ('case_list -> case_list case','case_list',2,'p_case_list','parser.py',232),
  ('case_list -> case','case_list',1,'p_case_list','parser.py',233),
  ('case -> CASE expression COLON statement_list','case',4,'p_case','parser.py',237),
  ('case -> DEFAULT COLON statement_list','case',3,'p_case','parser.py',238),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',243),
  ('variable -> variable DOT VARIABLE','variable',3,'p_variable','parser.py',244),
  ('variable -> variable LBRACKET expression RBRACKET','variable',4,'p_variable','parser.py',245),
  ('short_declaration -> variable_list ASSIGN_SHORT expression_list','short_declaration',3,'p_short_declaration','parser.py',249),
  ('short_declaration -> variable_list ASSIGN_SHORT expression_list SEMICOLON','short_declaration',4,'p_short_declaration','parser.py',250),
  ('variable_list -> variable','variable_list',1,'p_variable_list','parser.py',254),
  ('variable_list -> variable COMMA variable_list','variable_list',3,'p_variable_list','parser.py',255),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',259),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','parser.py',260),
  ('expression -> LBRACKET RBRACKET variable LPAREN expression RPAREN','expression',6,'p_expression_type_cast','parser.py',264),
  ('expression -> FLOAT64_TYPE LPAREN expression RPAREN','expression',4,'p_expression_type_cast_simple','parser.py',268),
  ('expression -> INT_TYPE LPAREN expression RPAREN','expression',4,'p_expression_type_cast_simple','parser.py',269),
  ('expression -> STRING_TYPE LPAREN expression RPAREN','expression',4,'p_expression_type_cast_simple','parser.py',270),
  ('expression -> BOOL_TYPE LPAREN expression RPAREN','expression',4,'p_expression_type_cast_simple','parser.py',271),
  ('expression -> VARIABLE LPAREN expression RPAREN','expression',4,'p_expression_type_cast_simple','parser.py',272),
  ('type_declaration -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE','type_declaration',6,'p_type_declaration','parser.py',276),
  ('struct_fields -> struct_fields struct_field','struct_fields',2,'p_struct_fields','parser.py',280),
  ('struct_fields -> struct_field','struct_fields',1,'p_struct_fields','parser.py',281),
  ('struct_fields -> empty','struct_fields',1,'p_struct_fields','parser.py',282),
  ('struct_field -> VARIABLE type','struct_field',2,'p_struct_field','parser.py',286),
  ('struct_field -> empty','struct_field',1,'p_struct_field','parser.py',287),
  ('expression -> VARIABLE LBRACE field_list RBRACE','expression',4,'p_expression_struct_literal','parser.py',291),
  ('field_list -> field_list COMMA field','field_list',3,'p_field_list','parser.py',295),
  ('field_list -> field','field_list',1,'p_field_list','parser.py',296),
  ('field_list -> empty','field_list',1,'p_field_list','parser.py',297),
  ('field -> VARIABLE COLON expression','field',3,'p_field','parser.py',301),
]
