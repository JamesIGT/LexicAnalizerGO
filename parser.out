Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPER
    AND
    APPEND
    BREAK
    CASE
    CHAR
    COLON
    CONTAINSRUNE
    CONTINUE
    DEFAULT
    DIVIDE
    DOT
    EQ
    FALSE
    FUNCNAME
    GE
    GT
    ISDIGIT
    ISLETTER
    LE
    LENGTH
    LT
    MAP
    MINUS
    MOD
    NE
    NUMBER
    OR
    PLUS
    PRINTF
    PRINTLN
    RUNES
    STRINGS
    STRUCT
    TOLOWER
    TRUE
    TYPE
    UNICODE

Grammar

Rule 0     S' -> program
Rule 1     program -> PACKAGE MAIN import_section function_list
Rule 2     program -> PACKAGE MAIN import_section empty
Rule 3     program -> PACKAGE VARIABLE import_section function_list
Rule 4     program -> PACKAGE VARIABLE import_section empty
Rule 5     import_section -> IMPORT import_list
Rule 6     import_section -> empty
Rule 7     import_list -> STRING
Rule 8     import_list -> LPAREN string_list RPAREN
Rule 9     string_list -> string_list STRING
Rule 10    string_list -> STRING
Rule 11    function_list -> function_list function
Rule 12    function_list -> function
Rule 13    function_list -> function_list type_declaration
Rule 14    function_list -> type_declaration
Rule 15    function_list -> empty
Rule 16    function -> FUNC VARIABLE LPAREN param_list RPAREN return_type block
Rule 17    function -> FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN param_list RPAREN return_type block
Rule 18    function -> FUNC LPAREN VARIABLE VARIABLE RPAREN VARIABLE LPAREN RPAREN return_type block
Rule 19    function -> FUNC LPAREN VARIABLE TIMES VARIABLE RPAREN VARIABLE LPAREN param_list RPAREN return_type block
Rule 20    function -> FUNC LPAREN VARIABLE TIMES VARIABLE RPAREN VARIABLE LPAREN RPAREN return_type block
Rule 21    param_list -> param_list COMMA param
Rule 22    param_list -> param
Rule 23    param_list -> empty
Rule 24    param -> VARIABLE type
Rule 25    return_type -> type
Rule 26    return_type -> LPAREN type_list RPAREN
Rule 27    return_type -> empty
Rule 28    type_list -> type_list COMMA type
Rule 29    type_list -> type
Rule 30    type -> STRING_TYPE
Rule 31    type -> INT_TYPE
Rule 32    type -> BOOL_TYPE
Rule 33    type -> FLOAT64_TYPE
Rule 34    type -> VARIABLE
Rule 35    type -> LBRACKET RBRACKET VARIABLE
Rule 36    block -> LBRACE statement_list RBRACE
Rule 37    statement_list -> statement_list statement
Rule 38    statement_list -> empty
Rule 39    statement -> declaration
Rule 40    statement -> assignment
Rule 41    statement -> short_declaration
Rule 42    statement -> if_statement
Rule 43    statement -> for_loop
Rule 44    statement -> function_call SEMICOLON
Rule 45    statement -> RETURN expression_list
Rule 46    statement -> RETURN expression_list SEMICOLON
Rule 47    statement -> FOR VARIABLE COMMA VARIABLE ASSIGN_SHORT RANGE variable block
Rule 48    statement -> variable INCREMENT
Rule 49    statement -> variable DECREMENT
Rule 50    statement -> SWITCH LBRACE case_list RBRACE
Rule 51    statement -> SWITCH expression LBRACE case_list RBRACE
Rule 52    statement -> type_declaration
Rule 53    declaration -> VAR VARIABLE ASSIGN expression
Rule 54    declaration -> VAR VARIABLE ASSIGN expression SEMICOLON
Rule 55    assignment -> variable ASSIGN expression
Rule 56    assignment -> variable ASSIGN expression SEMICOLON
Rule 57    assignment -> variable PLUS_ASSIGN expression
Rule 58    assignment -> variable MINUS_ASSIGN expression
Rule 59    assignment -> variable TIMES_ASSIGN expression
Rule 60    assignment -> variable DIVIDE_ASSIGN expression
Rule 61    if_statement -> IF expression block else_clause
Rule 62    else_clause -> ELSE block
Rule 63    else_clause -> empty
Rule 64    for_loop -> FOR VARIABLE ASSIGN expression SEMICOLON expression SEMICOLON assignment block
Rule 65    for_loop -> FOR VARIABLE ASSIGN_SHORT expression SEMICOLON expression SEMICOLON increment_statement block
Rule 66    for_loop -> FOR variable_list ASSIGN_SHORT RANGE variable block
Rule 67    increment_statement -> variable INCREMENT
Rule 68    increment_statement -> variable DECREMENT

Terminals, with rules where they appear

AMPER                : 
AND                  : 
APPEND               : 
ASSIGN               : 53 54 55 56 64
BOOL_TYPE            : 32
BREAK                : 
CASE                 : 
CHAR                 : 
COLON                : 
COMMA                : 21 28 47
CONTAINSRUNE         : 
CONTINUE             : 
DECREMENT            : 49 68
DEFAULT              : 
DIVIDE               : 
DOT                  : 
ELSE                 : 62
EQ                   : 
FALSE                : 
FLOAT64_TYPE         : 33
FOR                  : 47 64 65 66
FUNC                 : 16 17 18 19 20
FUNCNAME             : 
GE                   : 
GT                   : 
IF                   : 61
IMPORT               : 5
INCREMENT            : 48 67
INT_TYPE             : 31
ISDIGIT              : 
ISLETTER             : 
LBRACE               : 36 50 51
LBRACKET             : 35
LE                   : 
LENGTH               : 
LPAREN               : 8 16 17 17 18 18 19 19 20 20 26
LT                   : 
MAIN                 : 1 2
MAP                  : 
MINUS                : 
MOD                  : 
NE                   : 
NUMBER               : 
OR                   : 
PACKAGE              : 1 2 3 4
PLUS                 : 
PRINTF               : 
PRINTLN              : 
RANGE                : 47 66
RBRACE               : 36 50 51
RBRACKET             : 35
RETURN               : 45 46
RPAREN               : 8 16 17 17 18 18 19 19 20 20 26
RUNES                : 
SEMICOLON            : 44 46 54 56 64 64 65 65
STRING               : 7 9 10
STRINGS              : 
STRING_TYPE          : 30
STRUCT               : 
SWITCH               : 50 51
TIMES                : 19 20
TOLOWER              : 
TRUE                 : 
TYPE                 : 
UNICODE              : 
VAR                  : 53 54
VARIABLE             : 3 4 16 17 17 17 18 18 18 19 19 19 20 20 20 24 34 35 47 47 53 54 64 65
error                : 

Nonterminals, with rules where they appear

ASSIGN_SHORT         : 47 65 66
DIVIDE_ASSIGN        : 60
MINUS_ASSIGN         : 58
PLUS_ASSIGN          : 57
TIMES_ASSIGN         : 59
assignment           : 40 64
block                : 16 17 18 19 20 47 61 62 64 65 66
case_list            : 50 51
declaration          : 39
else_clause          : 61
empty                : 2 4 6 15 23 27 38 63
expression           : 51 53 54 55 56 57 58 59 60 61 64 64 65 65
expression_list      : 45 46
for_loop             : 43
function             : 11 12
function_call        : 44
function_list        : 1 3 11 13
if_statement         : 42
import_list          : 5
import_section       : 1 2 3 4
increment_statement  : 65
param                : 21 22
param_list           : 16 17 19 21
program              : 0
return_type          : 16 17 18 19 20
short_declaration    : 41
statement            : 37
statement_list       : 36 37
string_list          : 8 9
type                 : 24 25 28 29
type_declaration     : 13 14 52
type_list            : 26 28
variable             : 47 48 49 55 56 57 58 59 60 66 67 68
variable_list        : 66

