Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPER
    APPEND
    BREAK
    CASE
    CHAR
    COLON
    CONTAINSRUNE
    CONTINUE
    DECREMENT
    DEFAULT
    FALSE
    FUNCNAME
    GE
    GT
    INCREMENT
    ISDIGIT
    ISLETTER
    LE
    LENGTH
    LT
    MAP
    MOD
    PRINTF
    PRINTLN
    RANGE
    RETURN
    RUNES
    STRINGS
    SWITCH
    TOLOWER
    TRUE
    UNICODE

Grammar

Rule 0     S' -> program
Rule 1     program -> PACKAGE MAIN imports declarations main_function
Rule 2     imports -> IMPORT LPAREN import_list RPAREN
Rule 3     import_list -> import_list STRING
Rule 4     import_list -> STRING
Rule 5     main_function -> FUNC MAIN LPAREN RPAREN block
Rule 6     block -> LBRACE statements RBRACE
Rule 7     statements -> statements statement
Rule 8     statements -> statement
Rule 9     statement -> VARIABLE ASSIGN expression SEMICOLON
Rule 10    statement -> function_call SEMICOLON
Rule 11    statement -> for_loop
Rule 12    statement -> if_statement
Rule 13    statement -> declaration
Rule 14    for_loop -> FOR expression block
Rule 15    if_statement -> IF expression block
Rule 16    if_statement -> IF expression block ELSE block
Rule 17    function_call -> VARIABLE DOT VARIABLE LPAREN arguments RPAREN
Rule 18    function_call -> VARIABLE LPAREN arguments RPAREN
Rule 19    arguments -> arguments COMMA expression
Rule 20    arguments -> expression
Rule 21    arguments -> empty
Rule 22    expression -> STRING
Rule 23    expression -> NUMBER
Rule 24    expression -> VARIABLE
Rule 25    expression -> VARIABLE DOT VARIABLE
Rule 26    expression -> VARIABLE LBRACKET expression RBRACKET
Rule 27    expression -> expression PLUS expression
Rule 28    expression -> expression MINUS expression
Rule 29    expression -> expression TIMES expression
Rule 30    expression -> expression DIVIDE expression
Rule 31    expression -> expression EQ expression
Rule 32    expression -> expression NE expression
Rule 33    expression -> expression AND expression
Rule 34    expression -> expression OR expression
Rule 35    expression -> LPAREN expression RPAREN
Rule 36    declarations -> declarations declaration
Rule 37    declarations -> declaration
Rule 38    declaration -> type_struct
Rule 39    declaration -> VAR VARIABLE ASSIGN expression SEMICOLON
Rule 40    declaration -> FUNC receiver VARIABLE LPAREN params RPAREN block
Rule 41    receiver -> LPAREN VARIABLE TIMES VARIABLE RPAREN
Rule 42    type_struct -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE
Rule 43    struct_fields -> struct_fields type VARIABLE
Rule 44    struct_fields -> type VARIABLE
Rule 45    params -> params COMMA param
Rule 46    params -> param
Rule 47    params -> empty
Rule 48    param -> VARIABLE type
Rule 49    type -> STRING_TYPE
Rule 50    type -> INT_TYPE
Rule 51    type -> BOOL_TYPE
Rule 52    type -> FLOAT64_TYPE
Rule 53    empty -> <empty>

Terminals, with rules where they appear

AMPER                : 
AND                  : 33
APPEND               : 
ASSIGN               : 9 39
BOOL_TYPE            : 51
BREAK                : 
CASE                 : 
CHAR                 : 
COLON                : 
COMMA                : 19 45
CONTAINSRUNE         : 
CONTINUE             : 
DECREMENT            : 
DEFAULT              : 
DIVIDE               : 30
DOT                  : 17 25
ELSE                 : 16
EQ                   : 31
FALSE                : 
FLOAT64_TYPE         : 52
FOR                  : 14
FUNC                 : 5 40
FUNCNAME             : 
GE                   : 
GT                   : 
IF                   : 15 16
IMPORT               : 2
INCREMENT            : 
INT_TYPE             : 50
ISDIGIT              : 
ISLETTER             : 
LBRACE               : 6 42
LBRACKET             : 26
LE                   : 
LENGTH               : 
LPAREN               : 2 5 17 18 35 40 41
LT                   : 
MAIN                 : 1 5
MAP                  : 
MINUS                : 28
MOD                  : 
NE                   : 32
NUMBER               : 23
OR                   : 34
PACKAGE              : 1
PLUS                 : 27
PRINTF               : 
PRINTLN              : 
RANGE                : 
RBRACE               : 6 42
RBRACKET             : 26
RETURN               : 
RPAREN               : 2 5 17 18 35 40 41
RUNES                : 
SEMICOLON            : 9 10 39
STRING               : 3 4 22
STRINGS              : 
STRING_TYPE          : 49
STRUCT               : 42
SWITCH               : 
TIMES                : 29 41
TOLOWER              : 
TRUE                 : 
TYPE                 : 42
UNICODE              : 
VAR                  : 39
VARIABLE             : 9 17 17 18 24 25 25 26 39 40 41 41 42 43 44 48
error                : 

Nonterminals, with rules where they appear

arguments            : 17 18 19
block                : 5 14 15 16 16 40
declaration          : 13 36 37
declarations         : 1 36
empty                : 21 47
expression           : 9 14 15 16 19 20 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 39
for_loop             : 11
function_call        : 10
if_statement         : 12
import_list          : 2 3
imports              : 1
main_function        : 1
param                : 45 46
params               : 40 45
program              : 0
receiver             : 40
statement            : 7 8
statements           : 6 7
struct_fields        : 42 43
type                 : 43 44 48
type_struct          : 38

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PACKAGE MAIN imports declarations main_function

    PACKAGE         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PACKAGE . MAIN imports declarations main_function

    MAIN            shift and go to state 3


state 3

    (1) program -> PACKAGE MAIN . imports declarations main_function
    (2) imports -> . IMPORT LPAREN import_list RPAREN

    IMPORT          shift and go to state 5

    imports                        shift and go to state 4

state 4

    (1) program -> PACKAGE MAIN imports . declarations main_function
    (36) declarations -> . declarations declaration
    (37) declarations -> . declaration
    (38) declaration -> . type_struct
    (39) declaration -> . VAR VARIABLE ASSIGN expression SEMICOLON
    (40) declaration -> . FUNC receiver VARIABLE LPAREN params RPAREN block
    (42) type_struct -> . TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE

    VAR             shift and go to state 9
    FUNC            shift and go to state 10
    TYPE            shift and go to state 11

    declarations                   shift and go to state 6
    declaration                    shift and go to state 7
    type_struct                    shift and go to state 8

state 5

    (2) imports -> IMPORT . LPAREN import_list RPAREN

    LPAREN          shift and go to state 12


state 6

    (1) program -> PACKAGE MAIN imports declarations . main_function
    (36) declarations -> declarations . declaration
    (5) main_function -> . FUNC MAIN LPAREN RPAREN block
    (38) declaration -> . type_struct
    (39) declaration -> . VAR VARIABLE ASSIGN expression SEMICOLON
    (40) declaration -> . FUNC receiver VARIABLE LPAREN params RPAREN block
    (42) type_struct -> . TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE

    FUNC            shift and go to state 15
    VAR             shift and go to state 9
    TYPE            shift and go to state 11

    main_function                  shift and go to state 13
    declaration                    shift and go to state 14
    type_struct                    shift and go to state 8

state 7

    (37) declarations -> declaration .

    FUNC            reduce using rule 37 (declarations -> declaration .)
    VAR             reduce using rule 37 (declarations -> declaration .)
    TYPE            reduce using rule 37 (declarations -> declaration .)


state 8

    (38) declaration -> type_struct .

    FUNC            reduce using rule 38 (declaration -> type_struct .)
    VAR             reduce using rule 38 (declaration -> type_struct .)
    TYPE            reduce using rule 38 (declaration -> type_struct .)
    RBRACE          reduce using rule 38 (declaration -> type_struct .)
    VARIABLE        reduce using rule 38 (declaration -> type_struct .)
    FOR             reduce using rule 38 (declaration -> type_struct .)
    IF              reduce using rule 38 (declaration -> type_struct .)


state 9

    (39) declaration -> VAR . VARIABLE ASSIGN expression SEMICOLON

    VARIABLE        shift and go to state 16


state 10

    (40) declaration -> FUNC . receiver VARIABLE LPAREN params RPAREN block
    (41) receiver -> . LPAREN VARIABLE TIMES VARIABLE RPAREN

    LPAREN          shift and go to state 18

    receiver                       shift and go to state 17

state 11

    (42) type_struct -> TYPE . VARIABLE STRUCT LBRACE struct_fields RBRACE

    VARIABLE        shift and go to state 19


state 12

    (2) imports -> IMPORT LPAREN . import_list RPAREN
    (3) import_list -> . import_list STRING
    (4) import_list -> . STRING

    STRING          shift and go to state 21

    import_list                    shift and go to state 20

state 13

    (1) program -> PACKAGE MAIN imports declarations main_function .

    $end            reduce using rule 1 (program -> PACKAGE MAIN imports declarations main_function .)


state 14

    (36) declarations -> declarations declaration .

    FUNC            reduce using rule 36 (declarations -> declarations declaration .)
    VAR             reduce using rule 36 (declarations -> declarations declaration .)
    TYPE            reduce using rule 36 (declarations -> declarations declaration .)


state 15

    (5) main_function -> FUNC . MAIN LPAREN RPAREN block
    (40) declaration -> FUNC . receiver VARIABLE LPAREN params RPAREN block
    (41) receiver -> . LPAREN VARIABLE TIMES VARIABLE RPAREN

    MAIN            shift and go to state 22
    LPAREN          shift and go to state 18

    receiver                       shift and go to state 17

state 16

    (39) declaration -> VAR VARIABLE . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 23


state 17

    (40) declaration -> FUNC receiver . VARIABLE LPAREN params RPAREN block

    VARIABLE        shift and go to state 24


state 18

    (41) receiver -> LPAREN . VARIABLE TIMES VARIABLE RPAREN

    VARIABLE        shift and go to state 25


state 19

    (42) type_struct -> TYPE VARIABLE . STRUCT LBRACE struct_fields RBRACE

    STRUCT          shift and go to state 26


state 20

    (2) imports -> IMPORT LPAREN import_list . RPAREN
    (3) import_list -> import_list . STRING

    RPAREN          shift and go to state 27
    STRING          shift and go to state 28


state 21

    (4) import_list -> STRING .

    RPAREN          reduce using rule 4 (import_list -> STRING .)
    STRING          reduce using rule 4 (import_list -> STRING .)


state 22

    (5) main_function -> FUNC MAIN . LPAREN RPAREN block

    LPAREN          shift and go to state 29


state 23

    (39) declaration -> VAR VARIABLE ASSIGN . expression SEMICOLON
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 31

state 24

    (40) declaration -> FUNC receiver VARIABLE . LPAREN params RPAREN block

    LPAREN          shift and go to state 35


state 25

    (41) receiver -> LPAREN VARIABLE . TIMES VARIABLE RPAREN

    TIMES           shift and go to state 36


state 26

    (42) type_struct -> TYPE VARIABLE STRUCT . LBRACE struct_fields RBRACE

    LBRACE          shift and go to state 37


state 27

    (2) imports -> IMPORT LPAREN import_list RPAREN .

    VAR             reduce using rule 2 (imports -> IMPORT LPAREN import_list RPAREN .)
    FUNC            reduce using rule 2 (imports -> IMPORT LPAREN import_list RPAREN .)
    TYPE            reduce using rule 2 (imports -> IMPORT LPAREN import_list RPAREN .)


state 28

    (3) import_list -> import_list STRING .

    RPAREN          reduce using rule 3 (import_list -> import_list STRING .)
    STRING          reduce using rule 3 (import_list -> import_list STRING .)


state 29

    (5) main_function -> FUNC MAIN LPAREN . RPAREN block

    RPAREN          shift and go to state 38


state 30

    (24) expression -> VARIABLE .
    (25) expression -> VARIABLE . DOT VARIABLE
    (26) expression -> VARIABLE . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 24 (expression -> VARIABLE .)
    PLUS            reduce using rule 24 (expression -> VARIABLE .)
    MINUS           reduce using rule 24 (expression -> VARIABLE .)
    TIMES           reduce using rule 24 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 24 (expression -> VARIABLE .)
    EQ              reduce using rule 24 (expression -> VARIABLE .)
    NE              reduce using rule 24 (expression -> VARIABLE .)
    AND             reduce using rule 24 (expression -> VARIABLE .)
    OR              reduce using rule 24 (expression -> VARIABLE .)
    RPAREN          reduce using rule 24 (expression -> VARIABLE .)
    RBRACKET        reduce using rule 24 (expression -> VARIABLE .)
    LBRACE          reduce using rule 24 (expression -> VARIABLE .)
    COMMA           reduce using rule 24 (expression -> VARIABLE .)
    DOT             shift and go to state 39
    LBRACKET        shift and go to state 40


state 31

    (39) declaration -> VAR VARIABLE ASSIGN expression . SEMICOLON
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

    SEMICOLON       shift and go to state 41
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 32

    (22) expression -> STRING .

    SEMICOLON       reduce using rule 22 (expression -> STRING .)
    PLUS            reduce using rule 22 (expression -> STRING .)
    MINUS           reduce using rule 22 (expression -> STRING .)
    TIMES           reduce using rule 22 (expression -> STRING .)
    DIVIDE          reduce using rule 22 (expression -> STRING .)
    EQ              reduce using rule 22 (expression -> STRING .)
    NE              reduce using rule 22 (expression -> STRING .)
    AND             reduce using rule 22 (expression -> STRING .)
    OR              reduce using rule 22 (expression -> STRING .)
    RPAREN          reduce using rule 22 (expression -> STRING .)
    RBRACKET        reduce using rule 22 (expression -> STRING .)
    LBRACE          reduce using rule 22 (expression -> STRING .)
    COMMA           reduce using rule 22 (expression -> STRING .)


state 33

    (23) expression -> NUMBER .

    SEMICOLON       reduce using rule 23 (expression -> NUMBER .)
    PLUS            reduce using rule 23 (expression -> NUMBER .)
    MINUS           reduce using rule 23 (expression -> NUMBER .)
    TIMES           reduce using rule 23 (expression -> NUMBER .)
    DIVIDE          reduce using rule 23 (expression -> NUMBER .)
    EQ              reduce using rule 23 (expression -> NUMBER .)
    NE              reduce using rule 23 (expression -> NUMBER .)
    AND             reduce using rule 23 (expression -> NUMBER .)
    OR              reduce using rule 23 (expression -> NUMBER .)
    RPAREN          reduce using rule 23 (expression -> NUMBER .)
    RBRACKET        reduce using rule 23 (expression -> NUMBER .)
    LBRACE          reduce using rule 23 (expression -> NUMBER .)
    COMMA           reduce using rule 23 (expression -> NUMBER .)


state 34

    (35) expression -> LPAREN . expression RPAREN
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 50

state 35

    (40) declaration -> FUNC receiver VARIABLE LPAREN . params RPAREN block
    (45) params -> . params COMMA param
    (46) params -> . param
    (47) params -> . empty
    (48) param -> . VARIABLE type
    (53) empty -> .

    VARIABLE        shift and go to state 51
    RPAREN          reduce using rule 53 (empty -> .)
    COMMA           reduce using rule 53 (empty -> .)

    params                         shift and go to state 52
    param                          shift and go to state 53
    empty                          shift and go to state 54

state 36

    (41) receiver -> LPAREN VARIABLE TIMES . VARIABLE RPAREN

    VARIABLE        shift and go to state 55


state 37

    (42) type_struct -> TYPE VARIABLE STRUCT LBRACE . struct_fields RBRACE
    (43) struct_fields -> . struct_fields type VARIABLE
    (44) struct_fields -> . type VARIABLE
    (49) type -> . STRING_TYPE
    (50) type -> . INT_TYPE
    (51) type -> . BOOL_TYPE
    (52) type -> . FLOAT64_TYPE

    STRING_TYPE     shift and go to state 58
    INT_TYPE        shift and go to state 59
    BOOL_TYPE       shift and go to state 60
    FLOAT64_TYPE    shift and go to state 61

    struct_fields                  shift and go to state 56
    type                           shift and go to state 57

state 38

    (5) main_function -> FUNC MAIN LPAREN RPAREN . block
    (6) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 63

    block                          shift and go to state 62

state 39

    (25) expression -> VARIABLE DOT . VARIABLE

    VARIABLE        shift and go to state 64


state 40

    (26) expression -> VARIABLE LBRACKET . expression RBRACKET
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 65

state 41

    (39) declaration -> VAR VARIABLE ASSIGN expression SEMICOLON .

    FUNC            reduce using rule 39 (declaration -> VAR VARIABLE ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 39 (declaration -> VAR VARIABLE ASSIGN expression SEMICOLON .)
    TYPE            reduce using rule 39 (declaration -> VAR VARIABLE ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 39 (declaration -> VAR VARIABLE ASSIGN expression SEMICOLON .)
    VARIABLE        reduce using rule 39 (declaration -> VAR VARIABLE ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 39 (declaration -> VAR VARIABLE ASSIGN expression SEMICOLON .)
    IF              reduce using rule 39 (declaration -> VAR VARIABLE ASSIGN expression SEMICOLON .)


state 42

    (27) expression -> expression PLUS . expression
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 66

state 43

    (28) expression -> expression MINUS . expression
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 67

state 44

    (29) expression -> expression TIMES . expression
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 68

state 45

    (30) expression -> expression DIVIDE . expression
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 69

state 46

    (31) expression -> expression EQ . expression
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 70

state 47

    (32) expression -> expression NE . expression
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 71

state 48

    (33) expression -> expression AND . expression
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 72

state 49

    (34) expression -> expression OR . expression
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 73

state 50

    (35) expression -> LPAREN expression . RPAREN
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

    RPAREN          shift and go to state 74
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 51

    (48) param -> VARIABLE . type
    (49) type -> . STRING_TYPE
    (50) type -> . INT_TYPE
    (51) type -> . BOOL_TYPE
    (52) type -> . FLOAT64_TYPE

    STRING_TYPE     shift and go to state 58
    INT_TYPE        shift and go to state 59
    BOOL_TYPE       shift and go to state 60
    FLOAT64_TYPE    shift and go to state 61

    type                           shift and go to state 75

state 52

    (40) declaration -> FUNC receiver VARIABLE LPAREN params . RPAREN block
    (45) params -> params . COMMA param

    RPAREN          shift and go to state 76
    COMMA           shift and go to state 77


state 53

    (46) params -> param .

    RPAREN          reduce using rule 46 (params -> param .)
    COMMA           reduce using rule 46 (params -> param .)


state 54

    (47) params -> empty .

    RPAREN          reduce using rule 47 (params -> empty .)
    COMMA           reduce using rule 47 (params -> empty .)


state 55

    (41) receiver -> LPAREN VARIABLE TIMES VARIABLE . RPAREN

    RPAREN          shift and go to state 78


state 56

    (42) type_struct -> TYPE VARIABLE STRUCT LBRACE struct_fields . RBRACE
    (43) struct_fields -> struct_fields . type VARIABLE
    (49) type -> . STRING_TYPE
    (50) type -> . INT_TYPE
    (51) type -> . BOOL_TYPE
    (52) type -> . FLOAT64_TYPE

    RBRACE          shift and go to state 79
    STRING_TYPE     shift and go to state 58
    INT_TYPE        shift and go to state 59
    BOOL_TYPE       shift and go to state 60
    FLOAT64_TYPE    shift and go to state 61

    type                           shift and go to state 80

state 57

    (44) struct_fields -> type . VARIABLE

    VARIABLE        shift and go to state 81


state 58

    (49) type -> STRING_TYPE .

    VARIABLE        reduce using rule 49 (type -> STRING_TYPE .)
    RPAREN          reduce using rule 49 (type -> STRING_TYPE .)
    COMMA           reduce using rule 49 (type -> STRING_TYPE .)


state 59

    (50) type -> INT_TYPE .

    VARIABLE        reduce using rule 50 (type -> INT_TYPE .)
    RPAREN          reduce using rule 50 (type -> INT_TYPE .)
    COMMA           reduce using rule 50 (type -> INT_TYPE .)


state 60

    (51) type -> BOOL_TYPE .

    VARIABLE        reduce using rule 51 (type -> BOOL_TYPE .)
    RPAREN          reduce using rule 51 (type -> BOOL_TYPE .)
    COMMA           reduce using rule 51 (type -> BOOL_TYPE .)


state 61

    (52) type -> FLOAT64_TYPE .

    VARIABLE        reduce using rule 52 (type -> FLOAT64_TYPE .)
    RPAREN          reduce using rule 52 (type -> FLOAT64_TYPE .)
    COMMA           reduce using rule 52 (type -> FLOAT64_TYPE .)


state 62

    (5) main_function -> FUNC MAIN LPAREN RPAREN block .

    $end            reduce using rule 5 (main_function -> FUNC MAIN LPAREN RPAREN block .)


state 63

    (6) block -> LBRACE . statements RBRACE
    (7) statements -> . statements statement
    (8) statements -> . statement
    (9) statement -> . VARIABLE ASSIGN expression SEMICOLON
    (10) statement -> . function_call SEMICOLON
    (11) statement -> . for_loop
    (12) statement -> . if_statement
    (13) statement -> . declaration
    (17) function_call -> . VARIABLE DOT VARIABLE LPAREN arguments RPAREN
    (18) function_call -> . VARIABLE LPAREN arguments RPAREN
    (14) for_loop -> . FOR expression block
    (15) if_statement -> . IF expression block
    (16) if_statement -> . IF expression block ELSE block
    (38) declaration -> . type_struct
    (39) declaration -> . VAR VARIABLE ASSIGN expression SEMICOLON
    (40) declaration -> . FUNC receiver VARIABLE LPAREN params RPAREN block
    (42) type_struct -> . TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE

    VARIABLE        shift and go to state 84
    FOR             shift and go to state 89
    IF              shift and go to state 90
    VAR             shift and go to state 9
    FUNC            shift and go to state 10
    TYPE            shift and go to state 11

    statements                     shift and go to state 82
    statement                      shift and go to state 83
    function_call                  shift and go to state 85
    for_loop                       shift and go to state 86
    if_statement                   shift and go to state 87
    declaration                    shift and go to state 88
    type_struct                    shift and go to state 8

state 64

    (25) expression -> VARIABLE DOT VARIABLE .

    SEMICOLON       reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    PLUS            reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    MINUS           reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    TIMES           reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    DIVIDE          reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    EQ              reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    NE              reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    AND             reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    OR              reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    RPAREN          reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    RBRACKET        reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    LBRACE          reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)
    COMMA           reduce using rule 25 (expression -> VARIABLE DOT VARIABLE .)


state 65

    (26) expression -> VARIABLE LBRACKET expression . RBRACKET
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

    RBRACKET        shift and go to state 91
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 66

    (27) expression -> expression PLUS expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 27 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 27 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 27 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 27 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 27 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! NE              [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 27 (expression -> expression PLUS expression .) ]


state 67

    (28) expression -> expression MINUS expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 28 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 28 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 28 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 28 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 28 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 28 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 28 (expression -> expression MINUS expression .) ]
  ! NE              [ reduce using rule 28 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 28 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 28 (expression -> expression MINUS expression .) ]


state 68

    (29) expression -> expression TIMES expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 29 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 29 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 29 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 29 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 29 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 29 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 29 (expression -> expression TIMES expression .) ]
  ! NE              [ reduce using rule 29 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 29 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 29 (expression -> expression TIMES expression .) ]


state 69

    (30) expression -> expression DIVIDE expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 30 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 30 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 30 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 30 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 30 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 30 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression DIVIDE expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> expression DIVIDE expression .) ]
  ! NE              [ reduce using rule 30 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 30 (expression -> expression DIVIDE expression .) ]


state 70

    (31) expression -> expression EQ expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 31 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 31 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 31 (expression -> expression EQ expression .)
    LBRACE          reduce using rule 31 (expression -> expression EQ expression .)
    COMMA           reduce using rule 31 (expression -> expression EQ expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 31 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 31 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 31 (expression -> expression EQ expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 31 (expression -> expression EQ expression .) ]


state 71

    (32) expression -> expression NE expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 32 (expression -> expression NE expression .)
    RPAREN          reduce using rule 32 (expression -> expression NE expression .)
    RBRACKET        reduce using rule 32 (expression -> expression NE expression .)
    LBRACE          reduce using rule 32 (expression -> expression NE expression .)
    COMMA           reduce using rule 32 (expression -> expression NE expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 32 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression NE expression .) ]
  ! EQ              [ reduce using rule 32 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 32 (expression -> expression NE expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression NE expression .) ]
  ! OR              [ reduce using rule 32 (expression -> expression NE expression .) ]


state 72

    (33) expression -> expression AND expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 33 (expression -> expression AND expression .)
    RPAREN          reduce using rule 33 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 33 (expression -> expression AND expression .)
    LBRACE          reduce using rule 33 (expression -> expression AND expression .)
    COMMA           reduce using rule 33 (expression -> expression AND expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 33 (expression -> expression AND expression .) ]


state 73

    (34) expression -> expression OR expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 34 (expression -> expression OR expression .)
    RPAREN          reduce using rule 34 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 34 (expression -> expression OR expression .)
    LBRACE          reduce using rule 34 (expression -> expression OR expression .)
    COMMA           reduce using rule 34 (expression -> expression OR expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 34 (expression -> expression OR expression .) ]


state 74

    (35) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 35 (expression -> LPAREN expression RPAREN .)


state 75

    (48) param -> VARIABLE type .

    RPAREN          reduce using rule 48 (param -> VARIABLE type .)
    COMMA           reduce using rule 48 (param -> VARIABLE type .)


state 76

    (40) declaration -> FUNC receiver VARIABLE LPAREN params RPAREN . block
    (6) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 63

    block                          shift and go to state 92

state 77

    (45) params -> params COMMA . param
    (48) param -> . VARIABLE type

    VARIABLE        shift and go to state 51

    param                          shift and go to state 93

state 78

    (41) receiver -> LPAREN VARIABLE TIMES VARIABLE RPAREN .

    VARIABLE        reduce using rule 41 (receiver -> LPAREN VARIABLE TIMES VARIABLE RPAREN .)


state 79

    (42) type_struct -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE .

    FUNC            reduce using rule 42 (type_struct -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE .)
    VAR             reduce using rule 42 (type_struct -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE .)
    TYPE            reduce using rule 42 (type_struct -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE .)
    RBRACE          reduce using rule 42 (type_struct -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE .)
    VARIABLE        reduce using rule 42 (type_struct -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE .)
    FOR             reduce using rule 42 (type_struct -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE .)
    IF              reduce using rule 42 (type_struct -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE .)


state 80

    (43) struct_fields -> struct_fields type . VARIABLE

    VARIABLE        shift and go to state 94


state 81

    (44) struct_fields -> type VARIABLE .

    RBRACE          reduce using rule 44 (struct_fields -> type VARIABLE .)
    STRING_TYPE     reduce using rule 44 (struct_fields -> type VARIABLE .)
    INT_TYPE        reduce using rule 44 (struct_fields -> type VARIABLE .)
    BOOL_TYPE       reduce using rule 44 (struct_fields -> type VARIABLE .)
    FLOAT64_TYPE    reduce using rule 44 (struct_fields -> type VARIABLE .)


state 82

    (6) block -> LBRACE statements . RBRACE
    (7) statements -> statements . statement
    (9) statement -> . VARIABLE ASSIGN expression SEMICOLON
    (10) statement -> . function_call SEMICOLON
    (11) statement -> . for_loop
    (12) statement -> . if_statement
    (13) statement -> . declaration
    (17) function_call -> . VARIABLE DOT VARIABLE LPAREN arguments RPAREN
    (18) function_call -> . VARIABLE LPAREN arguments RPAREN
    (14) for_loop -> . FOR expression block
    (15) if_statement -> . IF expression block
    (16) if_statement -> . IF expression block ELSE block
    (38) declaration -> . type_struct
    (39) declaration -> . VAR VARIABLE ASSIGN expression SEMICOLON
    (40) declaration -> . FUNC receiver VARIABLE LPAREN params RPAREN block
    (42) type_struct -> . TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE

    RBRACE          shift and go to state 95
    VARIABLE        shift and go to state 84
    FOR             shift and go to state 89
    IF              shift and go to state 90
    VAR             shift and go to state 9
    FUNC            shift and go to state 10
    TYPE            shift and go to state 11

    statement                      shift and go to state 96
    function_call                  shift and go to state 85
    for_loop                       shift and go to state 86
    if_statement                   shift and go to state 87
    declaration                    shift and go to state 88
    type_struct                    shift and go to state 8

state 83

    (8) statements -> statement .

    RBRACE          reduce using rule 8 (statements -> statement .)
    VARIABLE        reduce using rule 8 (statements -> statement .)
    FOR             reduce using rule 8 (statements -> statement .)
    IF              reduce using rule 8 (statements -> statement .)
    VAR             reduce using rule 8 (statements -> statement .)
    FUNC            reduce using rule 8 (statements -> statement .)
    TYPE            reduce using rule 8 (statements -> statement .)


state 84

    (9) statement -> VARIABLE . ASSIGN expression SEMICOLON
    (17) function_call -> VARIABLE . DOT VARIABLE LPAREN arguments RPAREN
    (18) function_call -> VARIABLE . LPAREN arguments RPAREN

    ASSIGN          shift and go to state 97
    DOT             shift and go to state 98
    LPAREN          shift and go to state 99


state 85

    (10) statement -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 100


state 86

    (11) statement -> for_loop .

    RBRACE          reduce using rule 11 (statement -> for_loop .)
    VARIABLE        reduce using rule 11 (statement -> for_loop .)
    FOR             reduce using rule 11 (statement -> for_loop .)
    IF              reduce using rule 11 (statement -> for_loop .)
    VAR             reduce using rule 11 (statement -> for_loop .)
    FUNC            reduce using rule 11 (statement -> for_loop .)
    TYPE            reduce using rule 11 (statement -> for_loop .)


state 87

    (12) statement -> if_statement .

    RBRACE          reduce using rule 12 (statement -> if_statement .)
    VARIABLE        reduce using rule 12 (statement -> if_statement .)
    FOR             reduce using rule 12 (statement -> if_statement .)
    IF              reduce using rule 12 (statement -> if_statement .)
    VAR             reduce using rule 12 (statement -> if_statement .)
    FUNC            reduce using rule 12 (statement -> if_statement .)
    TYPE            reduce using rule 12 (statement -> if_statement .)


state 88

    (13) statement -> declaration .

    RBRACE          reduce using rule 13 (statement -> declaration .)
    VARIABLE        reduce using rule 13 (statement -> declaration .)
    FOR             reduce using rule 13 (statement -> declaration .)
    IF              reduce using rule 13 (statement -> declaration .)
    VAR             reduce using rule 13 (statement -> declaration .)
    FUNC            reduce using rule 13 (statement -> declaration .)
    TYPE            reduce using rule 13 (statement -> declaration .)


state 89

    (14) for_loop -> FOR . expression block
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 101

state 90

    (15) if_statement -> IF . expression block
    (16) if_statement -> IF . expression block ELSE block
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 102

state 91

    (26) expression -> VARIABLE LBRACKET expression RBRACKET .

    SEMICOLON       reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    EQ              reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    NE              reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    AND             reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    OR              reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    LBRACE          reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 26 (expression -> VARIABLE LBRACKET expression RBRACKET .)


state 92

    (40) declaration -> FUNC receiver VARIABLE LPAREN params RPAREN block .

    FUNC            reduce using rule 40 (declaration -> FUNC receiver VARIABLE LPAREN params RPAREN block .)
    VAR             reduce using rule 40 (declaration -> FUNC receiver VARIABLE LPAREN params RPAREN block .)
    TYPE            reduce using rule 40 (declaration -> FUNC receiver VARIABLE LPAREN params RPAREN block .)
    RBRACE          reduce using rule 40 (declaration -> FUNC receiver VARIABLE LPAREN params RPAREN block .)
    VARIABLE        reduce using rule 40 (declaration -> FUNC receiver VARIABLE LPAREN params RPAREN block .)
    FOR             reduce using rule 40 (declaration -> FUNC receiver VARIABLE LPAREN params RPAREN block .)
    IF              reduce using rule 40 (declaration -> FUNC receiver VARIABLE LPAREN params RPAREN block .)


state 93

    (45) params -> params COMMA param .

    RPAREN          reduce using rule 45 (params -> params COMMA param .)
    COMMA           reduce using rule 45 (params -> params COMMA param .)


state 94

    (43) struct_fields -> struct_fields type VARIABLE .

    RBRACE          reduce using rule 43 (struct_fields -> struct_fields type VARIABLE .)
    STRING_TYPE     reduce using rule 43 (struct_fields -> struct_fields type VARIABLE .)
    INT_TYPE        reduce using rule 43 (struct_fields -> struct_fields type VARIABLE .)
    BOOL_TYPE       reduce using rule 43 (struct_fields -> struct_fields type VARIABLE .)
    FLOAT64_TYPE    reduce using rule 43 (struct_fields -> struct_fields type VARIABLE .)


state 95

    (6) block -> LBRACE statements RBRACE .

    $end            reduce using rule 6 (block -> LBRACE statements RBRACE .)
    FUNC            reduce using rule 6 (block -> LBRACE statements RBRACE .)
    VAR             reduce using rule 6 (block -> LBRACE statements RBRACE .)
    TYPE            reduce using rule 6 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 6 (block -> LBRACE statements RBRACE .)
    VARIABLE        reduce using rule 6 (block -> LBRACE statements RBRACE .)
    FOR             reduce using rule 6 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 6 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 6 (block -> LBRACE statements RBRACE .)


state 96

    (7) statements -> statements statement .

    RBRACE          reduce using rule 7 (statements -> statements statement .)
    VARIABLE        reduce using rule 7 (statements -> statements statement .)
    FOR             reduce using rule 7 (statements -> statements statement .)
    IF              reduce using rule 7 (statements -> statements statement .)
    VAR             reduce using rule 7 (statements -> statements statement .)
    FUNC            reduce using rule 7 (statements -> statements statement .)
    TYPE            reduce using rule 7 (statements -> statements statement .)


state 97

    (9) statement -> VARIABLE ASSIGN . expression SEMICOLON
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 103

state 98

    (17) function_call -> VARIABLE DOT . VARIABLE LPAREN arguments RPAREN

    VARIABLE        shift and go to state 104


state 99

    (18) function_call -> VARIABLE LPAREN . arguments RPAREN
    (19) arguments -> . arguments COMMA expression
    (20) arguments -> . expression
    (21) arguments -> . empty
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN
    (53) empty -> .

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34
    RPAREN          reduce using rule 53 (empty -> .)
    COMMA           reduce using rule 53 (empty -> .)

    arguments                      shift and go to state 105
    expression                     shift and go to state 106
    empty                          shift and go to state 107

state 100

    (10) statement -> function_call SEMICOLON .

    RBRACE          reduce using rule 10 (statement -> function_call SEMICOLON .)
    VARIABLE        reduce using rule 10 (statement -> function_call SEMICOLON .)
    FOR             reduce using rule 10 (statement -> function_call SEMICOLON .)
    IF              reduce using rule 10 (statement -> function_call SEMICOLON .)
    VAR             reduce using rule 10 (statement -> function_call SEMICOLON .)
    FUNC            reduce using rule 10 (statement -> function_call SEMICOLON .)
    TYPE            reduce using rule 10 (statement -> function_call SEMICOLON .)


state 101

    (14) for_loop -> FOR expression . block
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (6) block -> . LBRACE statements RBRACE

    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    LBRACE          shift and go to state 63

    block                          shift and go to state 108

state 102

    (15) if_statement -> IF expression . block
    (16) if_statement -> IF expression . block ELSE block
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression
    (6) block -> . LBRACE statements RBRACE

    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    LBRACE          shift and go to state 63

    block                          shift and go to state 109

state 103

    (9) statement -> VARIABLE ASSIGN expression . SEMICOLON
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

    SEMICOLON       shift and go to state 110
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 104

    (17) function_call -> VARIABLE DOT VARIABLE . LPAREN arguments RPAREN

    LPAREN          shift and go to state 111


state 105

    (18) function_call -> VARIABLE LPAREN arguments . RPAREN
    (19) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 112
    COMMA           shift and go to state 113


state 106

    (20) arguments -> expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

    RPAREN          reduce using rule 20 (arguments -> expression .)
    COMMA           reduce using rule 20 (arguments -> expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 107

    (21) arguments -> empty .

    RPAREN          reduce using rule 21 (arguments -> empty .)
    COMMA           reduce using rule 21 (arguments -> empty .)


state 108

    (14) for_loop -> FOR expression block .

    RBRACE          reduce using rule 14 (for_loop -> FOR expression block .)
    VARIABLE        reduce using rule 14 (for_loop -> FOR expression block .)
    FOR             reduce using rule 14 (for_loop -> FOR expression block .)
    IF              reduce using rule 14 (for_loop -> FOR expression block .)
    VAR             reduce using rule 14 (for_loop -> FOR expression block .)
    FUNC            reduce using rule 14 (for_loop -> FOR expression block .)
    TYPE            reduce using rule 14 (for_loop -> FOR expression block .)


state 109

    (15) if_statement -> IF expression block .
    (16) if_statement -> IF expression block . ELSE block

    RBRACE          reduce using rule 15 (if_statement -> IF expression block .)
    VARIABLE        reduce using rule 15 (if_statement -> IF expression block .)
    FOR             reduce using rule 15 (if_statement -> IF expression block .)
    IF              reduce using rule 15 (if_statement -> IF expression block .)
    VAR             reduce using rule 15 (if_statement -> IF expression block .)
    FUNC            reduce using rule 15 (if_statement -> IF expression block .)
    TYPE            reduce using rule 15 (if_statement -> IF expression block .)
    ELSE            shift and go to state 114


state 110

    (9) statement -> VARIABLE ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 9 (statement -> VARIABLE ASSIGN expression SEMICOLON .)
    VARIABLE        reduce using rule 9 (statement -> VARIABLE ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 9 (statement -> VARIABLE ASSIGN expression SEMICOLON .)
    IF              reduce using rule 9 (statement -> VARIABLE ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 9 (statement -> VARIABLE ASSIGN expression SEMICOLON .)
    FUNC            reduce using rule 9 (statement -> VARIABLE ASSIGN expression SEMICOLON .)
    TYPE            reduce using rule 9 (statement -> VARIABLE ASSIGN expression SEMICOLON .)


state 111

    (17) function_call -> VARIABLE DOT VARIABLE LPAREN . arguments RPAREN
    (19) arguments -> . arguments COMMA expression
    (20) arguments -> . expression
    (21) arguments -> . empty
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN
    (53) empty -> .

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34
    RPAREN          reduce using rule 53 (empty -> .)
    COMMA           reduce using rule 53 (empty -> .)

    arguments                      shift and go to state 115
    expression                     shift and go to state 106
    empty                          shift and go to state 107

state 112

    (18) function_call -> VARIABLE LPAREN arguments RPAREN .

    SEMICOLON       reduce using rule 18 (function_call -> VARIABLE LPAREN arguments RPAREN .)


state 113

    (19) arguments -> arguments COMMA . expression
    (22) expression -> . STRING
    (23) expression -> . NUMBER
    (24) expression -> . VARIABLE
    (25) expression -> . VARIABLE DOT VARIABLE
    (26) expression -> . VARIABLE LBRACKET expression RBRACKET
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression EQ expression
    (32) expression -> . expression NE expression
    (33) expression -> . expression AND expression
    (34) expression -> . expression OR expression
    (35) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 32
    NUMBER          shift and go to state 33
    VARIABLE        shift and go to state 30
    LPAREN          shift and go to state 34

    expression                     shift and go to state 116

state 114

    (16) if_statement -> IF expression block ELSE . block
    (6) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 63

    block                          shift and go to state 117

state 115

    (17) function_call -> VARIABLE DOT VARIABLE LPAREN arguments . RPAREN
    (19) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 118
    COMMA           shift and go to state 113


state 116

    (19) arguments -> arguments COMMA expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . EQ expression
    (32) expression -> expression . NE expression
    (33) expression -> expression . AND expression
    (34) expression -> expression . OR expression

    RPAREN          reduce using rule 19 (arguments -> arguments COMMA expression .)
    COMMA           reduce using rule 19 (arguments -> arguments COMMA expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EQ              shift and go to state 46
    NE              shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49


state 117

    (16) if_statement -> IF expression block ELSE block .

    RBRACE          reduce using rule 16 (if_statement -> IF expression block ELSE block .)
    VARIABLE        reduce using rule 16 (if_statement -> IF expression block ELSE block .)
    FOR             reduce using rule 16 (if_statement -> IF expression block ELSE block .)
    IF              reduce using rule 16 (if_statement -> IF expression block ELSE block .)
    VAR             reduce using rule 16 (if_statement -> IF expression block ELSE block .)
    FUNC            reduce using rule 16 (if_statement -> IF expression block ELSE block .)
    TYPE            reduce using rule 16 (if_statement -> IF expression block ELSE block .)


state 118

    (17) function_call -> VARIABLE DOT VARIABLE LPAREN arguments RPAREN .

    SEMICOLON       reduce using rule 17 (function_call -> VARIABLE DOT VARIABLE LPAREN arguments RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for EQ in state 66 resolved as shift
WARNING: shift/reduce conflict for NE in state 66 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for EQ in state 67 resolved as shift
WARNING: shift/reduce conflict for NE in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for EQ in state 68 resolved as shift
WARNING: shift/reduce conflict for NE in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for EQ in state 69 resolved as shift
WARNING: shift/reduce conflict for NE in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NE in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for EQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NE in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NE in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for EQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NE in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
